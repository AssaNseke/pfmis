{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aAMA;;;AAEA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAC,EADP;AAEEC,iBAAS,EAACC;AAFZ,OADqB,EAKrB;AACEF,YAAI,EAAC,OADP;AAEEC,iBAAS,EAACC;AAFZ,OALqB,EASrB;AACEF,YAAI,EAAC,UADP;AAEEC,iBAAS,EAACE;AAFZ,OATqB,EAarB;AACEH,YAAI,EAAC,eADP;AAEEC,iBAAS,EAACG;AAFZ,OAbqB,EAiBrB;AACEJ,YAAI,EAAC,qBADP;AAEEC,iBAAS,EAACI;AAFZ,OAjBqB,CAAvB;;UA6BaC;;;;;yBAAAA;AAA2B;;;cAA3BA;;;kBAHF,CAACC,mEAAsBR,MAAtB,CAAD,GACCQ;;;;4HAECD,8BAA2B;AAAAE;AAAAC,oBAF5BF,yDAE4B;AAAA;AAFhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aCjBxB;AACA;AACA;;;UA6BaG;;;;;yBAAAA;AAAoB;;;cAApBA;;;kBAPF,CACPC,0DADO,EAEPC,uFAFO,EAGPC,0FAHO,EAIPC,iFAJO;;;;6HAOEJ,uBAAoB;AAAAK,yBAxB7BC,wEAwB6B,EAvB7BC,iFAuB6B,EAtB7BC,iFAsB6B,EArB7BC,qGAqB6B,EApB7BC,gGAoB6B,EAnB7BC,4FAmB6B,EAlB7BC,kHAkB6B,EAjB7BD,4FAiB6B,EAhB7BE,+EAgB6B,EAf7BC,0FAe6B,EAd7BC,0FAc6B,EAb7BC,0FAa6B,EAZ7BC,sGAY6B,CAX7B;AACA;AACD;AAS8B;oBAN7BhB,4DACAC,yFACAC,4FACAC;AAG6B;AAHT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCnCXc;AAGX,sCAAwDC,IAAxD,EAA0EC,YAA1E,EAAmIC,MAAnI,EAA0JC,aAA1J,EAAuMC,WAAvM,EAAsO;AAAA;;AAA9K;AAAkB;AAAyD;AAAuB;AAA6C;AADvM,qBAAW,EAAX;AAGC;;;;iBAED,oBAAQ;AACN,iBAAKC,GAAL,GAAW,KAAKL,IAAL,CAAUK,GAArB;AACAC,mBAAO,CAACC,GAAR,CAAY,KAAKP,IAAL,CAAUK,GAAtB;AACD;;;iBAED,oBAAQ;AAAA;;AACN,iBAAKF,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAKL,WAAL,CAAiBM,cAAjB,CAAgC,KAAKL,GAAL,CAASM,EAAzC,EAA6CC,SAA7C,CAAuD,gBAAM,EAAE;AAC7D,mBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC;;AACAH,qBAAO,CAACC,GAAR,CAAYM,MAAZ;;AACA,kBAAGA,MAAM,CAACb,IAAP,CAAYW,EAAZ,IAAkB,KAAI,CAACN,GAAL,CAASM,EAA9B,EAAiC;AAC/B,qBAAI,CAACR,aAAL,CAAmBW,YAAnB,CAAgC,wBAAhC;AACD,eAFD,MAGI;AACF,qBAAI,CAACX,aAAL,CAAmBW,YAAnB,CAAgC,qBAAhC;AACD,eAR4D,CAS7D;;;AACA,mBAAI,CAACb,YAAL,CAAkBc,KAAlB;AAED,aAZD,EAYE,uBAAa,EAAE;AACf,mBAAI,CAACZ,aAAL,CAAmBW,YAAnB,CAAgC,qBAAhC;;AACAR,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB,EAFe,CAGf;;AACA,mBAAI,CAACf,YAAL,CAAkBc,KAAlB;AACD,aAjBD;AAkBD,YAEA;;;;iBACA,mBAAO;AACN,iBAAKd,YAAL,CAAkBc,KAAlB;AACD;;;;;;;yBArCUhB,sBAAmBkB,gEAGEC,qEAHF,EAGiB,CAHjB,GAGiBD;AAAA;;;cAHpClB;AAAmBoB;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ACXhCN;;AAAqBA;;AAAiEA;;AACtFA;;AACAA;;AACIA;;AAAkCA;AAAA,qBAASO,aAAT;AAAkB,aAAlB;;AAAiDP;;AAAMA;;AACzFA;;AAA+BA;AAAA,qBAASO,cAAT;AAAmB,aAAnB;;AAAqBP;;AAAMA;;AAC9DA;;;;AALqBA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWRQ;AAGX,sCAAwDzB,IAAxD,EAA0EC,YAA1E,EAAmIC,MAAnI,EAA0JC,aAA1J,EAAuMC,WAAvM,EAAsO;AAAA;;AAA9K;AAAkB;AAAyD;AAAuB;AAA6C;AADvM,qBAAW,EAAX;AAGC;;;;iBAED,oBAAQ;AACN,iBAAKC,GAAL,GAAW,KAAKL,IAAL,CAAUK,GAArB;AACAC,mBAAO,CAACC,GAAR,CAAY,KAAKP,IAAL,CAAUK,GAAtB;AACD;;;;;;;yBAVUoB,sBAAmBR,gEAGEC,qEAHF,EAGiB,CAHjB,GAGiBD;AAAA;;;cAHpCQ;AAAmBN;AAAAC;AAAAC;AAAAE;AAAA;ACXhCN;;AAAGA;;AAAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUCA;;AAAoGA;;AAAiBA;;;;;;AAGhIA;;AACEA;;AACFA;;;;;;AACAA;;AACEA;;AACFA;;;;UCPGS;AAEX,0CAAmBzB,YAAnB,EAA8EE,aAA9E,EAA0HC,WAA1H,EAAyJ;AAAA;;AAAtI;AAA2D;AAA4C;AAE1H,iCAA0B,KAA1B;AACA,kCAA4B,KAA5B;AACA,kCAA4B,KAA5B;AAJ8J;;;;iBAM9J,oBAAQ;AACN;AACA,iBAAKuB,SAAL,GAAiB,IAAIC,qDAAJ,CAAc;AAC7BC,mBAAK,EAAE,IAAID,uDAAJ,CAAgB,IAAhB,EAAqB,CAACA,+DAAD,EAAsBA,4DAAtB,CAArB;AADsB,aAAd,CAAjB;AAGD;;;iBAED,mBAAO;AACL,iBAAK3B,YAAL,CAAkBc,KAAlB;AACD;;;iBAED,oBAAQ;AAAA;;AACN,gBAAIe,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,oBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,KAAKL,SAAL,CAAeM,KAAf,CAAqBJ,KAA9C;AAEA,iBAAK1B,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAKL,WAAL,CAAiB8B,iBAAjB,CAAmCJ,QAAnC,EAA6ClB,SAA7C,CAAuD,gBAAM,EAAE;AAC7D,oBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC;;AACAH,qBAAO,CAACC,GAAR,CAAYM,MAAZ;;AACA,kBAAGA,MAAM,CAACsB,MAAP,IAAiB,SAApB,EAA8B;AAC5B;AACA,sBAAI,CAACC,gBAAL,GAAwB,KAAxB;AACA,sBAAI,CAACC,eAAL,GAAuB,IAAvB;AACAC,4BAAY,CAACC,OAAb,CAAqB,WAArB,EAAiC,MAAI,CAACZ,SAAL,CAAeM,KAAf,CAAqBJ,KAAtD;AACA,sBAAI,CAACW,gBAAL,GAAwB,IAAxB;AACD,eAND,MAOI;AACF;AACA,sBAAI,CAACJ,gBAAL,GAAwB,IAAxB;AACA,sBAAI,CAACC,eAAL,GAAuB,KAAvB;AACA,sBAAI,CAACG,gBAAL,GAAwB,KAAxB;AACD;AAEF,aAjBD,EAiBE,uBAAa,EAAE;AACflC,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;;AACA,oBAAI,CAACb,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC;;AACA,oBAAI,CAAC2B,gBAAL,GAAwB,IAAxB;AACE,oBAAI,CAACC,eAAL,GAAuB,KAAvB;AAEH,aAvBD;AAyBD;;;;;;;yBAjDUX,0BAAuBT;AAAA;;;cAAvBS;AAAuBP;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ADXpCN;;AACIA;;AAAqBA;;AAAmCA;;AACxDA;;AACAA;;AACIA;;AAEEA;;AACEA;;AACEA;;AAAOA;;AAAKA;;AACZA;;AACAA;;AAAOA;;AAA2HA;;AACpIA;;AACFA;;AACAA;;AAGAA;;AAGFA;;AACJA;;AACAA;;AACIA;;AAAkCA;AAAA,qBAASO,aAAT;AAAkB,aAAlB;;AAAgDP;;AAAMA;;AACxFA;;AAA4DA;AAAA,qBAASO,cAAT;AAAmB,aAAnB;;AAChCP;;AAAMA;;AACtCA;;AACJA;;;;;;AA1BMA;;AAUqBA;;AAAAA;;AAG8BA;;AAAAA;;AAGDA;;AAAAA;;AAOxCA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdKA;;AAAwGA;;AAAgBA;;;;;;AAOxHA;;AAA0GA;;AAAiBA;;;;;;AAQ9HA;;AAA6EA;;AAAyBA;;;;;;AAArDA;;AAA4BA;;AAAAA;;;;;;AAE/EA;;AACwBA;;AAAuBA;;;;;;AAM3CA;;AAAwDA;;AAAmBA;;;;;;AAAxCA;;AAAqBA;;AAAAA;;;;;;AAE5DA;;AACwBA;;AAAgBA;;;;;;AAOnCA;;AAAgHA;;AAAoBA;;;;;;AAOpIA;;AAAkHA;;AAAqBA;;;;UCtC/IwB;AAGX,mCAAmBxC,YAAnB,EAAyEC,MAAzE,EAAgGC,aAAhG,EAA6IC,WAA7I,EAA4K;AAAA;;AAAzJ;AAAsD;AAAuB;AAA6C;AAE7I,8BAAuB,EAAvB;AACA,uBAAgB,EAAhB;AAHiL;;;;iBAKjL,oBAAQ;AACN,iBAAKsC,eAAL;AACA,iBAAKC,QAAL,GAFM,CAGN;;AACA,iBAAKC,YAAL,GAAoB,IAAIhB,qDAAJ,CAAc;AAChCC,mBAAK,EAAE,IAAID,uDAAJ,CAAgB,IAAhB,EAAqB,CAACA,+DAAD,EAAsBA,4DAAtB,CAArB,CADyB;AAEhCiB,kBAAI,EAAE,IAAIjB,uDAAJ,CAAgB,IAAhB,EAAqB,CAACA,+DAAD,CAArB,CAF0B;AAGhCkB,yBAAW,EAAE,IAAIlB,uDAAJ,CAAgB,IAAhB,EAAqB,CAACA,+DAAD,EAAqBA,iEAAqB,CAArB,CAArB,CAArB,CAHmB;AAIhCmB,kBAAI,EAAE,IAAInB,uDAAJ,CAAgB,IAAhB,EAAqB,CAACA,+DAAD,EAAqBA,iEAAqB,CAArB,CAArB,CAArB,CAJ0B;AAKhCoB,sBAAQ,EAAE,IAAIpB,uDAAJ,CAAgB,IAAhB,EAAqB,CAACA,+DAAD,CAArB,CALsB;AAMhCqB,uBAAS,EAAE,IAAIrB,uDAAJ,CAAgB,IAAhB,EAAqB,CAACA,+DAAD,CAArB;AANqB,aAAd,CAApB;AASD;;;iBAED,oBAAQ;AAAA;;AACN,gBAAIE,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,oBAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKY,YAAL,CAAkBX,KAAlB,CAAwBY,IAAhD;AACAf,oBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,KAAKY,YAAL,CAAkBX,KAAlB,CAAwBJ,KAAjD;AACAC,oBAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,KAAKY,YAAL,CAAkBX,KAAlB,CAAwBe,QAApD;AACAlB,oBAAQ,CAACE,MAAT,CAAgB,gBAAhB,EAAkC,KAAKY,YAAL,CAAkBX,KAAlB,CAAwBa,WAA1D;AACAhB,oBAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAAKY,YAAL,CAAkBX,KAAlB,CAAwBc,IAAnD;AACAjB,oBAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0B,MAA1B;;AACA,gBAAG,KAAKY,YAAL,CAAkBX,KAAlB,CAAwBe,QAAxB,IAAoC,KAAKJ,YAAL,CAAkBX,KAAlB,CAAwBgB,SAA/D,EAAyE;AACvE,mBAAK9C,aAAL,CAAmB+C,mBAAnB,CAAuC,sBAAvC;AACD,aAFD,MAGI;AACF,mBAAK/C,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,mBAAKL,WAAL,CAAiB+C,YAAjB,CAA8BrB,QAA9B,EAAwClB,SAAxC,CAAkD,gBAAM,EAAE;AACxD,sBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC,EADwD,CAExD;;;AACA,oBAAGI,MAAM,CAACsB,MAAP,IAAiB,SAApB,EAA8B;AAC5B,wBAAI,CAAChC,aAAL,CAAmBW,YAAnB,CAAgC,2BAAhC,EAD4B,CAE5B;;;AACA,wBAAI,CAACb,YAAL,CAAkBc,KAAlB;AACD,iBAJD,MAKI;AACF,wBAAI,CAACZ,aAAL,CAAmB+C,mBAAnB,CAAuC,qBAAvC;AACD;AAEF,eAZD,EAYE,uBAAa,EAAE;AACf5C,uBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,eAdD;AAeD;AACF;;;iBAED,mBAAO;AACL,iBAAKf,YAAL,CAAkBc,KAAlB;AACD;;;iBAED,2BAAe;AAAA;;AACb,iBAAKZ,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAKL,WAAL,CAAiBsC,eAAjB,GAAmC9B,SAAnC,CAA6C,gBAAM,EAAE;AACrD,oBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC,EADqD,CAEnD;;;AACA,oBAAI,CAAC2C,YAAL,GAAoBvC,MAAM,CAACb,IAA3B;AACD,aAJD,EAIE,uBAAa,EAAE;AACfM,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,aAND;AAOD;;;iBAED,oBAAQ;AAAA;;AACN,iBAAKb,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAKL,WAAL,CAAiBuC,QAAjB,GAA4B/B,SAA5B,CAAsC,gBAAM,EAAE;AAC9C,oBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC,EAD8C,CAE5C;;;AACA,oBAAI,CAAC4C,KAAL,GAAaxC,MAAM,CAACb,IAApB;AACD,aAJD,EAIE,uBAAa,EAAE;AACfM,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,aAND;AAOD;;;;;;;yBA9EUyB,mBAAgBxB;AAAA;;;cAAhBwB;AAAgBtB;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ADZ7BN;;AACIA;;AAAqBA;;AAAiBA;;AACtCA;;AACAA;;AACIA;;AACEA;;AACEA;;AACEA;;AAAOA;;AAAIA;;AACXA;;AACAA;;AAAOA;;AAA8HA;;AACvIA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAOA;;AAAKA;;AACZA;;AACAA;;AAAOA;;AAAiIA;;AAC1IA;;AACFA;;AACAA;;AACEA;;AACIA;;AAAQA;;AAAWA;;AACnBA;;AACCA;;AACCA;;AACFA;;AACAA;;AAEFA;;AACAA;;AACEA;;AAAQA;;AAAIA;;AACZA;;AACIA;;AACAA;;AACJA;;AACAA;;AAEFA;;AACNA;;AACEA;;AACEA;;AACEA;;AAAOA;;AAAQA;;AACfA;;AACAA;;AAAOA;;AAA0IA;;AACnJA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAOA;;AAAgBA;;AACvBA;;AACAA;;AAAOA;;AAA6IA;;AACtJA;;AACFA;;AACFA;;AACJA;;AACAA;;AACIA;;AAAkCA;AAAA,qBAASO,aAAT;AAAkB,aAAlB;;AAAgDP;;AAAMA;;AACxFA;;AAA0CA;AAAA,qBAASO,cAAT;AAAmB,aAAnB;;AACdP;;AAAMA;;AACtCA;;AACJA;;;;;;;;;;;AA5DMA;;AASqBA;;AAAAA;;AAOAA;;AAAAA;;AAOOA;;AAAAA;;AACgBA;;AAAAA;;AAE5BA;;AAAAA;;AAMeA;;AAAAA;;AACQA;;AAAAA;;AAEvBA;;AAAAA;;AAQKA;;AAAAA;;AAOAA;;AAAAA;;AAOXA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhDKA;;AAA4GA;;AAAiBA;;;;UCGrIqC;AAEX,mCAAmBrD,YAAnB,EAAyEC,MAAzE,EAAgGC,aAAhG,EAA6IC,WAA7I,EAA4K;AAAA;;AAAzJ;AAAsD;AAAuB;AAA6C;AAAoC;;;;iBAIjL,oBAAQ;AACN;AACA;AACA;AACA,iBAAKmD,QAAL,GAAgB,IAAI3B,qDAAJ,CAAc;AAE5B4B,wBAAU,EAAE,IAAI5B,uDAAJ,CAAgB,IAAhB,EAAqB,CAACA,+DAAD,EAAqBA,iEAAqB,CAArB,CAArB,CAArB;AAFgB,aAAd,CAAhB;AAMD;;;iBAED,oBAAQ;AAAA;;AACN,gBAAI6B,IAAI,GAAG,IAAIC,IAAJ,GAAWC,cAAX,EAAX;AACA,gBAAI7B,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEAD,oBAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,KAAKuB,QAAL,CAActB,KAAd,CAAoBuB,UAAlD;AACA1B,oBAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0B,MAA1B;AACAF,oBAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8ByB,IAA9B;AAGE,iBAAKtD,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAKL,WAAL,CAAiBwD,YAAjB,CAA8B9B,QAA9B,EAAwClB,SAAxC,CAAkD,gBAAM,EAAE;AACxD,oBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC;;AACAH,qBAAO,CAACC,GAAR,CAAYM,MAAZ;;AACA,kBAAGA,MAAM,CAACb,IAAP,CAAY6D,KAAZ,IAAqB,IAAxB,EAA6B;AAC3B,sBAAI,CAAC1D,aAAL,CAAmBW,YAAnB,CAAgC,2BAAhC,EAD2B,CAE3B;;;AACA,sBAAI,CAACb,YAAL,CAAkBc,KAAlB;AACD,eAJD,MAKI;AACF,sBAAI,CAACZ,aAAL,CAAmB+C,mBAAnB,CAAuC,qBAAvC;AACD;AAEF,aAZD,EAYE,uBAAa,EAAE;AACf5C,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,aAdD;AAgBH;;;iBAED,mBAAO;AACL,iBAAKf,YAAL,CAAkBc,KAAlB;AACD;;;;;;;yBAhDUuC,mBAAgBrC;AAAA;;;cAAhBqC;AAAgBnC;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ADZ7BN;;AACIA;;AAAqBA;;AAAiBA;;AACtCA;;AACAA;;AACIA;;AACEA;;AACEA;;AACEA;;AAAOA;;AAAUA;;AACjBA;;AACAA;;AAAOA;;AAAmIA;;AAC5IA;;AACFA;;AAKFA;;AACJA;;AACAA;;AACIA;;AAAkCA;AAAA,qBAASO,aAAT;AAAkB,aAAlB;;AAAgDP;;AAAMA;;AACxFA;;AAAsCA;AAAA,qBAASO,cAAT;AAAmB,aAAnB;;AACVP;;AAAMA;;AACtCA;;AACJA;;;;;;AAvBMA;;AASqBA;;AAAAA;;AAWXA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXKA;;AAA4GA;;AAAiBA;;;;UCIrI6C;AAEX,sCAAwD9D,IAAxD,EAA0EC,YAA1E,EAAoIC,MAApI,EAA2JC,aAA3J,EAAwMC,WAAxM,EAAuO;AAAA;;AAA/K;AAAkB;AAA0D;AAAuB;AAA6C;AAIxM,2BAAiB,IAAjB;AAEA,sBAAW,SAAX;AAN4O;;;;iBAS5O,oBAAQ;AACN;AACAE,mBAAO,CAACC,GAAR,CAAY,KAAKP,IAAL,CAAUK,GAAtB,EAFM,CAGN;;AACA,iBAAK0D,IAAL,GAAYzB,YAAY,CAAC0B,OAAb,CAAqB,MAArB,CAAZ;AAEA,iBAAKC,SAAL,GAAiB,KAAKjE,IAAL,CAAUK,GAAV,CAAcM,EAA/B,CANM,CAON;AACA;AACA;;AACA,iBAAK4C,QAAL,GAAgB,IAAI3B,qDAAJ,CAAc;AAE5B4B,wBAAU,EAAE,IAAI5B,uDAAJ,CAAgB,KAAK5B,IAAL,CAAUK,GAAV,CAAcmD,UAA9B,EAAyC,CAAC5B,+DAAD,EAAqBA,iEAAqB,CAArB,CAArB,CAAzC;AAFgB,aAAd,CAAhB;AAMD;;;iBAED,oBAAQ;AAAA;;AACN,gBAAIE,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CADM,CAGN;AAEA;;AACAD,oBAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,eAA9B;AACAF,oBAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0B,MAA1B;AACAF,oBAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,YAA9B;AAGE,iBAAK7B,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAKL,WAAL,CAAiB8D,cAAjB,CAAgC,KAAKD,SAArC,EAA+CnC,QAA/C,EAAyDlB,SAAzD,CAAmE,gBAAM,EAAE;AACzE,oBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC,EADyE,CAEzE;;;AACA,kBAAGI,MAAM,CAACsB,MAAP,IAAiB,aAApB,EAAkC;AAChC,sBAAI,CAAChC,aAAL,CAAmBW,YAAnB,CAAgC,2BAAhC,EADgC,CAEhC;;;AACA,sBAAI,CAACb,YAAL,CAAkBc,KAAlB;AACD,eAJD,MAKI;AACF,sBAAI,CAACZ,aAAL,CAAmB+C,mBAAnB,CAAuC,qBAAvC;AACD;AAEF,aAZD,EAYE,uBAAa,EAAE;AACf5C,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,aAdD;AAgBH;;;iBAGD,mBAAO;AACL,iBAAKf,YAAL,CAAkBc,KAAlB;AACD;;;;;;;yBA9DU+C,sBAAmB7C,gEAEEkD,qEAFF,EAEiB,CAFjB,GAEiBlD;AAAA;;;cAFpC6C;AAAmB3C;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ADbhCN;;AACIA;;AAAqBA;;AAAWA;;AAChCA;;AACAA;;AACIA;;AACEA;;AACEA;;AACEA;;AAAOA;;AAAUA;;AACjBA;;AACAA;;AAAOA;;AAAmIA;;AAC5IA;;AACFA;;AAKFA;;AACJA;;AACAA;;AACIA;;AAAkCA;AAAA,qBAASO,aAAT;AAAkB,aAAlB;;AAAgDP;;AAAMA;;AACxFA;;AAAqDA;AAAA,qBAASO,cAAT;AAAmB,aAAnB;;AACzBP;;AAAMA;;AACtCA;;AACJA;;;;;;AAvBMA;;AASqBA;;AAAAA;;AAWXA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBdmD;;AACIA;;AACJA;;;;;;AAqBiBA;;AAAoGA;;AAAiBA;;;;;;AAOnHA;;AAA0GA;;AAAqBA;;;;UCpBvIC;AAEX,iCAAmBlE,aAAnB,EAAgEC,WAAhE,EAAyGF,MAAzG,EAAiIoE,MAAjI,EAAkJ;AAAA;;AAA/H;AAA6C;AAAyC;AAAwB;AAAuB;;;;iBAGxJ,oBAAQ;AACN;AACA,iBAAKC,SAAL,GAAiB,IAAIC,qDAAJ,CAAc;AAC7B3C,mBAAK,EAAE,IAAI2C,uDAAJ,CAAgB,IAAhB,EAAqB,CAACA,+DAAD,EAAsBA,4DAAtB,CAArB,CADsB;AAE7BxB,sBAAQ,EAAE,IAAIwB,uDAAJ,CAAgB,IAAhB,EAAqB,CAACA,+DAAD,CAArB;AAFmB,aAAd,CAAjB;AAKD;;;iBAED,mBAAO;AAAA;;AACL,gBAAI1C,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,oBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,KAAKuC,SAAL,CAAetC,KAAf,CAAqBJ,KAA9C;AACAC,oBAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,KAAKuC,SAAL,CAAetC,KAAf,CAAqBe,QAAjD,EAHK,CAKL;AACA;;AAEA,iBAAK7C,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAKL,WAAL,CAAiBqE,SAAjB,CAA2B3C,QAA3B,EAAqClB,SAArC,CAA+C,gBAAM,EAAE;AACrD,oBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC;;AACAH,qBAAO,CAACC,GAAR,CAAYM,MAAM,CAAC6D,KAAnB;;AACA,kBAAG7D,MAAM,CAAC6D,KAAP,IAAgB,IAAnB,EAAwB;AAEtB,sBAAI,CAACtE,WAAL,CAAiBuE,YAAjB,CAA8B9D,MAA9B;;AACA,sBAAI,CAACX,MAAL,CAAY0E,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,eAJD,MAKI;AACF,sBAAI,CAACzE,aAAL,CAAmB+C,mBAAnB,CAAuC,0BAAvC;AACD;AAEF,aAZD,EAYE,uBAAa,EAAE;AACf,oBAAI,CAAC/C,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC;;AACA,oBAAI,CAACN,aAAL,CAAmB+C,mBAAnB,CAAuC,0BAAvC;;AACA5C,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,aAhBD;AAkBD;;;iBAED,0BAAc;AACZ,gBAAM6D,YAAY,GAAG,IAAIC,qEAAJ,EAArB;AACID,wBAAY,CAACE,YAAb,GAA4B,KAA5B;AACAF,wBAAY,CAACG,SAAb,GAAyB,IAAzB;AACAH,wBAAY,CAACI,KAAb,GAAqB,KAArB,CAJQ,CAKR;;AACJ,iBAAKX,MAAL,CAAYY,IAAZ,CAAiBC,qGAAjB,EAA0CN,YAA1C,EAAwDO,WAAxD,GAAsExE,SAAtE,CAAgF,oBAAU,EAAE,CAE3F,CAFD;AAGD;;;;;;;yBApDUyD,iBAAcD;AAAA;;;cAAdC;AAAclD;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ADX3B6C;;AACEA;;;;AAGFA;;AAEAA;;AACEA;;AACEA;;AAAIA;;AAA+BA;;AACnCA;;AAAIA;;AAAyCA;;AAC/CA;;AACEA;;AACEA;;AACIA;;AACIA;;AACJA;;AACFA;;AACEA;;AACFA;;AACAA;;AACEA;;AACEA;;AACEA;;AAAOA;;AAAKA;;AACZA;;AACFA;;AAAOA;;AAA2HA;;AAClIA;;AACFA;;AACAA;;AACEA;;AACEA;;AAAOA;;AAAQA;;AACfA;;AACAA;;AAAOA;;AAAqIA;;AAC9IA;;AACFA;;AACAA;;AACEA;;AACEA;;AAA2FA;AAAA,qBAAS5C,aAAT;AAAkB,aAAlB;;AAAoB4C;;AAAKA;;AACtHA;;AACFA;;AACAA;;AAAKA;AAAA,qBAAS5C,oBAAT;AAAyB,aAAzB;;AACH4C;;AACFA;;AAEFA;;AACFA;;AACFA;;AACFA;;;;;;;AA7CMA;;AAAAA;;AAWIA;;AAAAA;;AAYaA;;AAAAA;;AAOEA;;AAAAA;;AAKLA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBNiB;;AAAoCA;;AAAGA;;;;;;AACvCA;;AAAqDA;;AAAQA;;;;;;AAARA;;AAAAA;;;;;;AAGrDA;;AAAoDA;;AAAKA;;;;;;AACzDA;;AAAqCA;;AAAiBA;;;;;;AAAjBA;;AAAAA;;;;;;AAGrCA;;AAAoDA;;AAAMA;;;;;;AAC1DA;;AAAqCA;;AAAkBA;;;;;;AAAlBA;;AAAAA;;;;;;AAGrCA;;AAAoDA;;AAAYA;;;;;;AAChEA;;AAAqCA;;AAAkCA;;;;;;AAAlCA;;AAAAA;;;;;;AAGrCA;;AAAoDA;;AAAKA;;;;;;AACzDA;;AAAqCA;;AAA4BA;;;;;;AAA5BA;;AAAAA;;;;;;AAGrCA;;AAAoDA;;AAAOA;;;;;;AAEvDA;;AACIA;;AACJA;;;;;;AACAA;;AACIA;;AACJA;;;;;;AANJA;;AACIA;;AAGAA;;AAGJA;;;;;;AANUA;;AAAAA;;AAGAA;;AAAAA;;;;;;AAMVA;;;;;;;;AACAA;;AACIA;;AAA8DA;;AAASA;;AACvEA;;AAKIA;;AAAsBA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClBA;;AAAUA;;AAAcA;;AACxBA;;AAAMA;;AAAOA;;AACjBA;;AAKJA;;AACJA;;;;;;AAfcA;;AAAAA;;;;;;AAiBlBA;;;;;;AACAA;;;;;;;;UCzDCC;AAOX,oCAAoBlF,WAApB,EAA6DkE,MAA7D,EAAuFnE,aAAvF,EAAoIoF,qBAApI,EAAgL;AAAA;;AAA5J;AAAyC;AAA0B;AAA6C;AACpI,sBAAY,EAAZ;AACA,8BAAe,IAAIC,uEAAJ,EAAf;AACA,yCAA0B,CAAC,IAAD,EAAM,MAAN,EAAa,OAAb,EAAqB,aAArB,EAAmC,MAAnC,EAA0C,QAA1C,EAAmD,QAAnD,CAA1B;AACA,6BAAc;AAAC,gCAAmB,KAApB;AAA0B,0BAAa;AAAvC,WAAd;AACA,yCAAiC,EAAjC;AALqL;;;;iBAOrL,oBAAQ;AAEN,iBAAKC,wBAAL,CAA8BnD,YAAY,CAAC0B,OAAb,CAAqB,SAArB,CAA9B;AAID;;;iBAED,8BAAkB;AAAA;;AAChB,iBAAK7D,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAKL,WAAL,CAAiBsF,kBAAjB,GAAsC9E,SAAtC,CAAgD,gBAAM,EAAE;AACxD,oBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC,EADwD,CAEtD;;;AACA,oBAAI,CAACkF,YAAL,CAAkB3F,IAAlB,GAAyBa,MAAM,CAACb,IAAhC;AACA,oBAAI,CAAC2F,YAAL,CAAkBC,IAAlB,GAAyB,MAAI,CAACA,IAA9B;AACA,oBAAI,CAACD,YAAL,CAAkBE,SAAlB,GAA8B,MAAI,CAACA,SAAnC;AAED,aAPD,EAOE,uBAAa,EAAE;AACfvF,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,aATD;AAUD;;;iBAED,oCAA2B8E,OAA3B,EAAsC;AAAA;;AACpC,iBAAK3F,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAKL,WAAL,CAAiB2F,0BAAjB,CAA4CD,OAA5C,EAAqDlF,SAArD,CAA+D,gBAAM,EAAE;AACvE,qBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC,EADuE,CAErE;;;AACA,qBAAI,CAACkF,YAAL,CAAkB3F,IAAlB,GAAyBa,MAAM,CAACb,IAAhC;AACA,qBAAI,CAAC2F,YAAL,CAAkBC,IAAlB,GAAyB,OAAI,CAACA,IAA9B;AACA,qBAAI,CAACD,YAAL,CAAkBE,SAAlB,GAA8B,OAAI,CAACA,SAAnC;AAED,aAPD,EAOE,uBAAa,EAAE;AACfvF,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,aATD;AAUD;;;iBAED,iBAAK;AAAA;;AACH,gBAAM6D,YAAY,GAAG,IAAImB,qEAAJ,EAArB;AACInB,wBAAY,CAACE,YAAb,GAA4B,KAA5B;AACAF,wBAAY,CAACG,SAAb,GAAyB,IAAzB;AACAH,wBAAY,CAACI,KAAb,GAAqB,KAArB,CAJD,CAKC;;AACJ,iBAAKX,MAAL,CAAYY,IAAZ,CAAiBe,iFAAjB,EAAmCpB,YAAnC,EAAiDO,WAAjD,GAA+DxE,SAA/D,CAAyE,oBAAU,EAAE;AACnF,kBAAG,OAAI,CAACsF,WAAL,CAAiBC,UAApB,EAA+B;AAC7B,uBAAI,CAACT,kBAAL;AACD,eAFD,MAGK,IAAG,OAAI,CAACQ,WAAL,CAAiBE,gBAApB,EAAqC;AACxC,uBAAI,CAACL,0BAAL,CAAgCzD,YAAY,CAAC0B,OAAb,CAAqB,gBAArB,CAAhC;AACD;AACF,aAPD;AAQD,YAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBAEA,kBAAS3D,GAAT,EAAgB,CAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,YAGF;;;;iBACA,qBAAYgG,UAAZ,EAA8B;AAC5B/F,mBAAO,CAACC,GAAR,CAAY8F,UAAZ;AACA,iBAAKV,YAAL,CAAkBW,MAAlB,GAA2BD,UAAU,CAACE,IAAX,GAAkBC,WAAlB,EAA3B;AACD,YAED;;;;iBACA,wBAAY,CACV;AACD;;;iBAED,kCAAyBC,OAAzB,EAAoC;AAAA;;AAClC,iBAAKtG,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAK8E,qBAAL,CAA2BmB,sBAA3B,CAAkDD,OAAlD,EAA2D7F,SAA3D,CAAqE,gBAAM,EAAE;AAC3E,qBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC;;AAEA,qBAAI,CAACkG,uBAAL,GAA+B9F,MAAM,CAACb,IAAtC;;AAEA,mBAAI,IAAI4G,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,OAAI,CAACD,uBAAL,CAA6BE,MAAhD,EAAwD,EAAED,CAA1D,EAA4D;AAC1D,oBAAG,OAAI,CAACD,uBAAL,CAA6BC,CAA7B,EAAgCE,UAAhC,CAA2CC,eAA3C,IAA8D,YAAjE,EAA8E;AAE5E,yBAAI,CAACb,WAAL,CAAiBC,UAAjB,GAA8B,IAA9B;AACD;;AACD,oBAAG,OAAI,CAACQ,uBAAL,CAA6BC,CAA7B,EAAgCE,UAAhC,CAA2CC,eAA3C,IAA8D,kBAAjE,EAAoF;AAClF,yBAAI,CAACb,WAAL,CAAiBE,gBAAjB,GAAoC,IAApC;AACD;AACF,eAb0E,CAe3E;;;AAEA,kBAAG,OAAI,CAACF,WAAL,CAAiBC,UAApB,EAA+B;AAC7B,uBAAI,CAACT,kBAAL;AACD,eAFD,MAGK,IAAG,OAAI,CAACQ,WAAL,CAAiBE,gBAApB,EAAqC;AACxC,uBAAI,CAACL,0BAAL,CAAgCzD,YAAY,CAAC0B,OAAb,CAAqB,gBAArB,CAAhC;AACD;AAGF,aAzBD,EAyBE,uBAAa,EAAE;AACf1D,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,aA3BD;AA4BD;;;;;;;yBAjJUsE,oBAAiBD;AAAA;;;cAAjBC;AAAiBnE;AAAA6F;AAAA;sEAGjBC,6DAAO;;sEACPC,uEAAY;;;;;;;;;;;;;;;;;;ADnBzB7B;;AACIA;;AAAKA;;AAAeA;;AACxBA;;AAEAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAIA;;AAAYA;;AACpBA;;AACAA;;AACIA;;AAA+BA;AAAA,qBAAS7D,WAAT;AAAgB,aAAhB;;AAC3B6D;;AAAkDA;;AAAUA;;AAChEA;;AACJA;;AACJA;;AACAA;;AACIA;;AAAOA;AAAA,qBAAS7D,oCAAT;AAA+C,aAA/C;;AAAP6D;;AACJA;;AACAA;;AACIA;;AACIA;;AACAA;;AACJA;;AACAA;;AACIA;;AACAA;;AACJA;;AACAA;;AACIA;;AACAA;;AACJA;;AACAA;;AACIA;;AACAA;;AACJA;;AACAA;;AACIA;;AACAA;;AACJA;;AACAA;;AACIA;;AACAA;;AAQJA;;AACAA;;AACIA;;AACAA;;AAiBJA;;AACAA;;AACAA;;AACJA;;AACAA;;AAGJA;;AACJA;;;;AA3DmBA;;AAAAA;;AAoDUA;;AAAAA;;AACaA;;AAAAA;;AAEnBA;;AAAAA,6GAAmC,iBAAnC,EAAmCA,qEAAnC,EAAmC,WAAnC,EAAmC,CAAnC,EAAmC,UAAnC,EAAmC,EAAnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEvEnBpE;;AACIA;;AACJA;;;;;;AAiBmBA;;AAAgGA;;AAAqBA;;;;;;AAOnHA;;AAAkGA;;AAAiBA;;;;UChB/HkG;AAGX,yCAAmBhH,aAAnB,EAAgEC,WAAhE,EAAyGF,MAAzG,EAAiIoE,MAAjI,EAA2J8C,KAA3J,EAAgL;AAAA;;AAA7J;AAA6C;AAAyC;AAAwB;AAA0B;AAA0B;;;;iBAKrL,oBAAQ;AAAA;;AACN;AACA,iBAAKA,KAAL,CAAWC,WAAX,CACCzG,SADD,CACW,gBAAM,EAAG;AAClBN,qBAAO,CAACC,GAAR,CAAY+G,MAAZ;AACA,qBAAI,CAAC5C,KAAL,GAAa4C,MAAM,CAAC5C,KAApB;AACApE,qBAAO,CAACC,GAAR,CAAY,OAAI,CAACmE,KAAjB;AACD,aALD,EAFM,CAUN;;AACA,iBAAK6C,IAAL,GAAY,IAAI3F,qDAAJ,CAAc;AACxBoB,sBAAQ,EAAE,IAAIpB,uDAAJ,CAAgB,IAAhB,EAAqB,CAACA,+DAAD,CAArB,CADc;AAExBqB,uBAAS,EAAE,IAAIrB,uDAAJ,CAAgB,IAAhB,EAAqB,CAACA,+DAAD,CAArB;AAFa,aAAd,CAAZ;AAKD;;;iBAED,oBAAQ;AAAA;;AAEN,gBAAG,KAAK2F,IAAL,CAAUtF,KAAV,CAAgBe,QAAhB,IAA4B,KAAKuE,IAAL,CAAUtF,KAAV,CAAgBgB,SAA/C,EAAyD;AACzD,kBAAInB,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,sBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,KAAK0C,KAA9B;AACA5C,sBAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,KAAKuF,IAAL,CAAUtF,KAAV,CAAgBe,QAA5C;AACAlB,sBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBM,YAAY,CAAC0B,OAAb,CAAqB,WAArB,CAAzB;AAEA,mBAAK7D,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,mBAAKL,WAAL,CAAiBoH,cAAjB,CAAgC1F,QAAhC,EAA0ClB,SAA1C,CAAoD,gBAAM,EAAE;AAC1D,uBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC;;AACAH,uBAAO,CAACC,GAAR,CAAYM,MAAM,CAAC6D,KAAnB;;AAEA,oBAAG7D,MAAM,CAACsB,MAAP,IAAiB,SAApB,EAA8B;AAE5B,yBAAI,CAAChC,aAAL,CAAmBW,YAAnB,CAAgC,gCAAhC;;AACAwB,8BAAY,CAACmF,UAAb,CAAwB,WAAxB;;AACA,yBAAI,CAACvH,MAAL,CAAY0E,QAAZ,CAAqB,CAAC,QAAD,CAArB;AAED,iBAND,MAOI;AACF,yBAAI,CAACzE,aAAL,CAAmB+C,mBAAnB,CAAuC,6CAAvC;AACD;AAEF,eAfD,EAeE,uBAAa,EAAE;AACf5C,uBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,eAjBD;AAmBD,aA1BC,MA2BE;AACF,mBAAKb,aAAL,CAAmB+C,mBAAnB,CAAuC,0BAAvC;AACD;AAEA;;;;;;;yBA3DUiE,yBAAsBlG;AAAA;;;cAAtBkG;AAAsBhG;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ADXnCN;;AACIA;;;;AAGFA;;AAEAA;;AACIA;;AACEA;;AAIEA;;AACIA;;AACJA;;AACAA;;AACEA;;AACEA;;AACEA;;AAAOA;;AAAQA;;AACfA;;AACAA;;AAAOA;;AAA2HA;;AACpIA;;AACFA;;AACAA;;AACIA;;AACEA;;AAAOA;;AAAgBA;;AACvBA;;AACAA;;AAAOA;;AAAyHA;;AAClIA;;AACFA;;AACFA;;AACEA;;AACEA;;AAAsFA;AAAA,qBAASO,cAAT;AAAmB,aAAnB;;AAAqBP;;AAAMA;;AACnHA;;AACFA;;AAEFA;;AACFA;;AACFA;;AACFA;;;;;;;AAtCMA;;AAAAA;;AAOIA;;AAAAA;;AAYeA;;AAAAA;;AAOEA;;AAAAA;;AAKPA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdAyG;;AAAoCA;;AAAGA;;;;;;AACvCA;;AAAqDA;;AAAQA;;;;;;AAARA;;AAAAA;;;;;;AAGrDA;;AAAoDA;;AAAWA;;;;;;AAC/DA;;AAAqCA;;AAAuBA;;;;;;AAAvBA;;AAAAA;;;;;;AAGrCA;;AAAmCA;;AAAMA;;;;;;;;AACzCA;;AACIA;;AAA8DA;;AAASA;;AACvEA;;AAKJA;;AAAsBA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClBA;;AAAyCA;;AAAMA;;AAC/CA;;AAAMA;;AAAMA;;AAChBA;;AACAA;;AAAsBA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClBA;;AAAUA;;AAAMA;;AAChBA;;AAAMA;;AAAMA;;AAChBA;;AACIA;;AACJA;;;;;;AAfcA;;AAAAA;;;;;;AAiBlBA;;;;;;AACAA;;;;;;AAqBYA;;AAAuDA;;AAAmBA;;;;;;AAAvCA;;AAAoBA;;AAAAA;;;;;;AAc/CA;;AACYA;;AAAkCA;;;;;;AAAlCA;;AAAAA;;;;;;AACZA;;AAAgEA;;AAAaA;;;;;;AAS7EA;;AACIA;;AAA8BA;;;;;;AAA9BA;;AAAAA;;;;;;;;UC5E/BC;AAOX,+CAAoBvH,WAApB,EAA6DkE,MAA7D,EAAuFnE,aAAvF,EAAoIyH,iBAApI,EAAwK;AAAA;;AAApJ;AAAyC;AAA0B;AAA6C;AAEpI,4BAAa,IAAIC,uEAAJ,EAAb;AACA,kCAAmB,CAAC,IAAD,EAAM,YAAN,EAAmB,QAAnB,CAAnB;AAEA,uBAAc,EAAd;AACA,iCAAyB,EAAzB;AACA,oCAA4B,EAA5B;AACA,sCAA8B,EAA9B;AACA,gCAAwB,EAAxB;AACA,mCAA2B,EAA3B;AAV6K;;;;iBAa7K,oBAAQ;AAEN,iBAAKC,gBAAL;AAEA,iBAAKnF,QAAL;AACD,YAED;;;;iBACA,cAAKoF,KAAL,EAAiC;AAC/B,gBAAIA,KAAK,CAACC,iBAAN,KAA4BD,KAAK,CAACE,SAAtC,EAAiD;AAC/C,uFAAgBF,KAAK,CAACE,SAAN,CAAgBjI,IAAhC,EAAsC+H,KAAK,CAACG,aAA5C,EAA2DH,KAAK,CAACI,YAAjE;AACD,aAFD,MAEO;AACL,yFACEJ,KAAK,CAACC,iBAAN,CAAwBhI,IAD1B,EAEE+H,KAAK,CAACE,SAAN,CAAgBjI,IAFlB,EAGE+H,KAAK,CAACG,aAHR,EAIEH,KAAK,CAACI,YAJR;AAMD;;AAED7H,mBAAO,CAACC,GAAR,CAAY,KAAK6H,eAAjB;AACD;;;iBAED,4BAAgB;AAAA;;AAEd,iBAAKC,oBAAL,GAA4B,EAA5B;;AACA,iBAAI,IAAIzB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKwB,eAAL,CAAqBvB,MAAxC,EAAgD,EAAED,CAAlD,EAAoD;AAClD,mBAAKyB,oBAAL,CAA0BC,IAA1B,CAA+B;AAAC,2BAAW,KAAKC,gBAAjB;AAAmC,iCAAgB,KAAKH,eAAL,CAAqBxB,CAArB,EAAwB4B;AAA3E,eAA/B;AACC;;AACH,gBAAIC,kBAAkB,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAC,uBAAQ,KAAKN;AAAd,aAAf,CAAzB,CANc,CAQd;AAEA;;AACA,iBAAKlI,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAKL,WAAL,CAAiBwI,kBAAjB,CAAoC,KAAKL,gBAAzC,EAA0DE,kBAA1D,EAA8E7H,SAA9E,CAAwF,gBAAM,EAAE;AAChG,qBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC,EADgG,CAE9F;;;AACA,kBAAGI,MAAM,CAACgI,OAAP,IAAkB,IAArB,EAA0B;AACxB,uBAAI,CAAC1I,aAAL,CAAmBW,YAAnB,CAAgC,kCAAhC;AACD,eAFD,MAGI;AACF,uBAAI,CAACX,aAAL,CAAmB+C,mBAAnB,CAAuC,0BAAvC;AACD;AAEF,aAVD,EAUE,uBAAa,EAAE;AACf5C,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,aAZD;AAcD;;;iBAED,oBAAQ;AAAA;;AACN,iBAAKb,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAKL,WAAL,CAAiBuC,QAAjB,GAA4B/B,SAA5B,CAAsC,gBAAM,EAAE;AAC9C,qBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC,EAD8C,CAE5C;;;AACA,qBAAI,CAACqI,UAAL,CAAgB9I,IAAhB,GAAuBa,MAAM,CAACb,IAA9B;AACA+I,wBAAU,CAAC;AAAA,uBAAM,OAAI,CAACD,UAAL,CAAgBlD,IAAhB,GAAuB,OAAI,CAACA,IAAlC;AAAA,eAAD,CAAV;AACAmD,wBAAU,CAAC;AAAA,uBAAM,OAAI,CAACD,UAAL,CAAgBjD,SAAhB,GAA4B,OAAI,CAACA,SAAvC;AAAA,eAAD,CAAV;AAEA,qBAAI,CAACxC,KAAL,GAAaxC,MAAM,CAACb,IAApB;AAED,aATD,EASE,uBAAa,EAAE;AACfM,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,aAXD;AAYD;;;iBAED,4BAAgB;AAAA;;AACd,iBAAKgI,cAAL,GAAsB,EAAtB;AACA,iBAAK7I,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAKL,WAAL,CAAiB6I,iBAAjB,GAAqCrI,SAArC,CAA+C,gBAAM,EAAE;AACvD,qBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC,EADuD,CAErD;;;AACA,qBAAI,CAACyI,iBAAL,GAAyBrI,MAAM,CAACb,IAAhC;;AACA,mBAAI,IAAI4G,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,OAAI,CAACsC,iBAAL,CAAuBrC,MAA1C,EAAkD,EAAED,CAApD,EAAsD;AAEtD,uBAAI,CAACoC,cAAL,CAAoBV,IAApB,CAAyB;AAAC,mCAAgB,OAAI,CAACY,iBAAL,CAAuBtC,CAAvB,EAA0BjG,EAA3C;AAA+C,qCAAkB,OAAI,CAACuI,iBAAL,CAAuBtC,CAAvB,EAA0BG;AAA3F,iBAAzB;AACC;AAGF,aAVD,EAUE,uBAAa,EAAE;AACfzG,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,aAZD;AAaD;;;iBAED,+BAAsBL,EAAtB,EAA4B;AAAA;;AAC1B,iBAAKyH,eAAL,GAAuB,EAAvB;AACA,iBAAKjI,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,IAAlC;AACA,iBAAKL,WAAL,CAAiBsG,sBAAjB,CAAwC/F,EAAxC,EAA4CC,SAA5C,CAAsD,gBAAM,EAAE;AAC9D,qBAAI,CAACT,aAAL,CAAmBK,SAAnB,CAA6BC,IAA7B,CAAkC,KAAlC,EAD8D,CAE5D;;;AACA,qBAAI,CAAC0I,kBAAL,GAA0BtI,MAAM,CAACb,IAAjC;;AACA,mBAAI,IAAI4G,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,OAAI,CAACuC,kBAAL,CAAwBtC,MAA3C,EAAmD,EAAED,CAArD,EAAuD;AACrD,uBAAI,CAACwB,eAAL,CAAqBE,IAArB,CAA0B;AAAC,mCAAgB,OAAI,CAACa,kBAAL,CAAwBvC,CAAxB,EAA2BE,UAA3B,CAAsCnG,EAAvD;AAA2D,qCAAkB,OAAI,CAACwI,kBAAL,CAAwBvC,CAAxB,EAA2BE,UAA3B,CAAsCC;AAAnH,iBAA1B;AACD;;AAED,qBAAI,CAACqC,yBAAL;AAED,aAVD,EAUE,uBAAa,EAAE;AACf9I,qBAAO,CAACC,GAAR,CAAY,YAAWS,aAAvB;AACD,aAZD;AAaD;;;iBAED,qCAAyB;AAAA;;AAEvB,iBAAI,IAAI4F,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKwB,eAAL,CAAqBvB,MAAxC,EAAgD,EAAED,CAAlD,EAAoD;AAClD,mBAAKoC,cAAL,GAAsB,KAAKA,cAAL,CAAoB1C,MAApB,CAA2B,cAAI;AAAA,uBAAI+C,IAAI,CAACb,aAAL,IAAsB,OAAI,CAACJ,eAAL,CAAqBxB,CAArB,EAAwB4B,aAAlD;AAAA,eAA/B,CAAtB;AACD,aAJsB,CAKvB;;AACD;;;iBAED,sBAAa/B,OAAb,EAAwB;AACtB;AACA,iBAAK8B,gBAAL,GAAwB9B,OAAxB;AACA,iBAAKqB,gBAAL;AACA,iBAAKwB,qBAAL,CAA2B7C,OAA3B;AAED;;;iBAED,iBAAK;AAAA;;AACH,gBAAM5B,YAAY,GAAG,IAAI0E,qEAAJ,EAArB;AACI1E,wBAAY,CAACE,YAAb,GAA4B,KAA5B;AACAF,wBAAY,CAACG,SAAb,GAAyB,IAAzB;AACAH,wBAAY,CAACI,KAAb,GAAqB,KAArB,CAJD,CAKC;;AACJ,iBAAKX,MAAL,CAAYY,IAAZ,CAAiBsE,+EAAjB,EAAmC3E,YAAnC,EAAiDO,WAAjD,GAA+DxE,SAA/D,CAAyE,oBAAU,EAAE;AACrF,qBAAI,CAAC+B,QAAL;AACC,aAFD;AAGD,YAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;iBAEA,kBAAStC,GAAT,EAAgB;AAAA;;AACd;AACA,gBAAMwE,YAAY,GAAG,IAAI0E,qEAAJ,EAArB;AACK1E,wBAAY,CAACE,YAAb,GAA4B,KAA5B;AACAF,wBAAY,CAACG,SAAb,GAAyB,IAAzB;AACAH,wBAAY,CAACI,KAAb,GAAqB,KAArB,CALS,CAMT;;AACAJ,wBAAY,CAAC7E,IAAb,GAAoB;AAAC,qBAAMK;AAAP,aAApB;AACJ,iBAAKiE,MAAL,CAAYY,IAAZ,CAAiBuE,yFAAjB,EAAsC5E,YAAtC,EAAoDO,WAApD,GAAkExE,SAAlE,CAA4E,oBAAU,EAAE;AACvF,qBAAI,CAAC+B,QAAL;AACA,aAFD;AAID;;;iBAIF,kBAAStC,GAAT,EAAgB;AAAA;;AACd,gBAAMwE,YAAY,GAAG,IAAI0E,qEAAJ,EAArB;AACA1E,wBAAY,CAACE,YAAb,GAA4B,KAA5B;AACAF,wBAAY,CAACG,SAAb,GAAyB,IAAzB,CAHc,CAId;AACA;;AACAH,wBAAY,CAAC7E,IAAb,GAAoB;AAAC,qBAAMK;AAAP,aAApB;AACC,iBAAKiE,MAAL,CAAYY,IAAZ,CAAiBwE,yFAAjB,EAAsC7E,YAAtC,EAAoDO,WAApD,GAAkExE,SAAlE,CAA4E,oBAAU,EAAE;AACvF,qBAAI,CAAC+B,QAAL;AACF,aAFC;AAGD;;;;;;;yBA9LSgF,+BAA4BD;AAAA;;;cAA5BC;AAA4BxG;AAAA6F;AAAA;sEAG5B2C,6DAAO;;sEACPC,wEAAY;;;;;;;;;;;;;;;;;;ADvBzBlC;;AACIA;;AAAKA;;AAAoBA;;AAC7BA;;AAEAA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAIA;;AAAKA;;AACbA;;AACAA;;AACIA;;AAA+BA;AAAA,qBAASlG,WAAT;AAAgB,aAAhB;;AAC3BkG;;AAAkDA;;AAAUA;;AAChEA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AACAA;;AACJA;;AACAA;;AACIA;;AACAA;;AACJA;;AACAA;;AACIA;;AACAA;;AAiBJA;;AACAA;;AACAA;;AACJA;;AACAA;;AAGJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAIA;;AAAUA;;AAClBA;;AACAA;;AACIA;;AACIA;;AACIA;;AAAOA;;AAAWA;;AAClBA;;AAAwCA;AAAA,qBAAUlG,qCAAV;AAA2C,aAA3C;;AAEpCkG;;AACAA;;AACJA;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AACIA;;AACIA;;AACIA;;AACIA;;AAAIA;;AAAkBA;;AAEtBA;;AACIA;AAAA,qBAAsBlG,gBAAtB;AAAkC,aAAlC;;AACAkG;;AAEAA;;AACJA;;AACJA;;AAEAA;;AACIA;;AAAIA;;AAAoBA;;AAExBA;;AACIA;AAAA,qBAAsBlG,gBAAtB;AAAkC,aAAlC;;AACAkG;;AAEJA;;AACJA;;AACJA;;AACJA;;AACAA;;AACIA;;AAAgGA;AAAA,qBAASlG,sBAAT;AAA2B,aAA3B;;AAA6BkG;;AAAIA;;AACrIA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;AA1F2BA;;AAAAA;;AA6BUA;;AAAAA;;AACaA;;AAAAA;;AAEnBA;;AAAAA,2GAAiC,iBAAjC,EAAiCA,sEAAjC,EAAiC,WAAjC,EAAiC,CAAjC,EAAiC,UAAjC,EAAiC,EAAjC;;AAYTA;;AAAAA;;AAM2BA;;AAAAA;;AACQA;;AAAAA;;AAYJA;;AAAAA;;AAE0CA;;AAAAA;;AAE1BA;;AAAAA;;AAOhBA;;AAAAA;;AAEsCA;;AAAAA;;AAOvDA;;AAAAA;;;;;;;;","names":["routes","path","component","_pages_login_login_component__WEBPACK_IMPORTED_MODULE_0__","_pages_register_register_component__WEBPACK_IMPORTED_MODULE_1__","_pages_resetpassword_resetpassword_component__WEBPACK_IMPORTED_MODULE_2__","_pages_rolesandpermissions_rolesandpermissions_component__WEBPACK_IMPORTED_MODULE_3__","AuthenticationRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_5__","imports","exports","AuthenticationModule","_angular_common__WEBPACK_IMPORTED_MODULE_15__","_authentication_routing_module__WEBPACK_IMPORTED_MODULE_0__","_custommaterials_custommaterials_module__WEBPACK_IMPORTED_MODULE_3__","_angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_16__","declarations","_pages_login_login_component__WEBPACK_IMPORTED_MODULE_1__","_pages_register_register_component__WEBPACK_IMPORTED_MODULE_2__","_dialogs_register_adduser_component__WEBPACK_IMPORTED_MODULE_4__","_dialogs_forgotpassword_forgotpassword_component__WEBPACK_IMPORTED_MODULE_5__","_pages_resetpassword_resetpassword_component__WEBPACK_IMPORTED_MODULE_6__","_dialogs_userprofile_userprofile_component__WEBPACK_IMPORTED_MODULE_7__","_pages_rolesandpermissions_rolesandpermissions_component__WEBPACK_IMPORTED_MODULE_8__","_dialogs_roles_add_role_component__WEBPACK_IMPORTED_MODULE_9__","_dialogs_deleterole_deleterole_component__WEBPACK_IMPORTED_MODULE_10__","_dialogs_updaterole_updaterole_component__WEBPACK_IMPORTED_MODULE_11__","_dialogs_deleteuser_deleteuser_component__WEBPACK_IMPORTED_MODULE_12__","_dialogs_updatepassword_updatepassword_component__WEBPACK_IMPORTED_MODULE_13__","DeleteroleComponent","data","matDialogRef","router","sharedService","authService","row","console","log","isLoading","next","deleteroleById","id","subscribe","result","openSnackBar","close","errorResponse","_angular_core__WEBPACK_IMPORTED_MODULE_2__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__","selectors","decls","vars","consts","template","ctx","DeleteuserComponent","ForgotpasswordComponent","ResetForm","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","email","formdata","FormData","append","value","passResetResquest","status","emailExistStatus","emailSentStatus","localStorage","setItem","hidesubmitbutton","AdduserComponent","getInstitutions","getRoles","RegisterForm","name","institution","role","password","password2","openFailureSnackBar","registerUser","institutions","roles","AddRoleComponent","RoleForm","role_title","date","Date","toLocaleString","registerRole","title","UpdateroleComponent","user","getItem","record_id","updateRoleById","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__","_angular_core__WEBPACK_IMPORTED_MODULE_3__","LoginComponent","dialog","LoginForm","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","userLogin","token","saveUserData","navigate","dialogConfig","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__","disableClose","autoFocus","width","open","_dialogs_forgotpassword_forgotpassword_component__WEBPACK_IMPORTED_MODULE_0__","afterClosed","_angular_core__WEBPACK_IMPORTED_MODULE_4__","RegisterComponent","rolepermissionService","_angular_material_table__WEBPACK_IMPORTED_MODULE_5__","checklist_rolepermission","getRegisteredUsers","leadersArray","sort","paginator","inst_id","getRegisteredUsersByInstID","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__","_dialogs_register_adduser_component__WEBPACK_IMPORTED_MODULE_0__","permissions","superadmin","institutionadmin","filtertext","filter","trim","toLowerCase","role_id","getpermissionsByRoleId","userrolepermissionArray","i","length","permission","permission_code","viewQuery","_angular_material_sort__WEBPACK_IMPORTED_MODULE_7__","_angular_material_paginator__WEBPACK_IMPORTED_MODULE_8__","ResetpasswordComponent","route","queryParams","params","Form","updatePassword","removeItem","_angular_core__WEBPACK_IMPORTED_MODULE_5__","RolesandpermissionsComponent","changeDetectorRef","_angular_material_table__WEBPACK_IMPORTED_MODULE_6__","getallPermission","event","previousContainer","container","previousIndex","currentIndex","rolepermissions","rolepermissionTosave","push","selected_role_id","permission_id","rolepermissionjson","JSON","stringify","addrolespermission","message","rolesArray","setTimeout","allpermissions","getallPermissions","allpermissionsObj","rolepermissionsObj","filteravailablePermission","item","getpermissionByRoleId","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__","_dialogs_roles_add_role_component__WEBPACK_IMPORTED_MODULE_0__","_dialogs_updaterole_updaterole_component__WEBPACK_IMPORTED_MODULE_2__","_dialogs_deleterole_deleterole_component__WEBPACK_IMPORTED_MODULE_1__","_angular_material_sort__WEBPACK_IMPORTED_MODULE_9__","_angular_material_paginator__WEBPACK_IMPORTED_MODULE_10__"],"sources":["webpack:///src/app/authentication/authentication-routing.module.ts","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/dialogs/deleterole/deleterole.component.ts","webpack:///src/app/authentication/dialogs/deleterole/deleterole.component.html","webpack:///src/app/authentication/dialogs/deleteuser/deleteuser.component.ts","webpack:///src/app/authentication/dialogs/deleteuser/deleteuser.component.html","webpack:///src/app/authentication/dialogs/forgotpassword/forgotpassword.component.html","webpack:///src/app/authentication/dialogs/forgotpassword/forgotpassword.component.ts","webpack:///src/app/authentication/dialogs/register/adduser.component.html","webpack:///src/app/authentication/dialogs/register/adduser.component.ts","webpack:///src/app/authentication/dialogs/roles/add-role.component.html","webpack:///src/app/authentication/dialogs/roles/add-role.component.ts","webpack:///src/app/authentication/dialogs/updaterole/updaterole.component.html","webpack:///src/app/authentication/dialogs/updaterole/updaterole.component.ts","webpack:///src/app/authentication/pages/login/login.component.html","webpack:///src/app/authentication/pages/login/login.component.ts","webpack:///src/app/authentication/pages/register/register.component.html","webpack:///src/app/authentication/pages/register/register.component.ts","webpack:///src/app/authentication/pages/resetpassword/resetpassword.component.html","webpack:///src/app/authentication/pages/resetpassword/resetpassword.component.ts","webpack:///src/app/authentication/pages/rolesandpermissions/rolesandpermissions.component.html","webpack:///src/app/authentication/pages/rolesandpermissions/rolesandpermissions.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { ResetpasswordComponent } from './pages/resetpassword/resetpassword.component';\nimport { RolesandpermissionsComponent } from './pages/rolesandpermissions/rolesandpermissions.component';\n//import { RolesComponent } from './pages/roles/roles.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:LoginComponent\n  },\n  {\n    path:'login',\n    component:LoginComponent\n  },\n  {\n    path:'register',\n    component:RegisterComponent\n  },\n  {\n    path:'resetpassword',\n    component:ResetpasswordComponent\n   },\n  {\n    path:'rolesandpermissions',\n    component:RolesandpermissionsComponent\n  }\n\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { CustommaterialsModule } from '../custommaterials/custommaterials.module';\nimport { AdduserComponent } from './dialogs/register/adduser.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { ForgotpasswordComponent } from './dialogs/forgotpassword/forgotpassword.component';\nimport { ResetpasswordComponent } from './pages/resetpassword/resetpassword.component';\nimport { UserprofileComponent } from './dialogs/userprofile/userprofile.component';\nimport { RolesandpermissionsComponent } from './pages/rolesandpermissions/rolesandpermissions.component';\nimport { AddRoleComponent } from './dialogs/roles/add-role.component';\nimport { DeleteroleComponent } from './dialogs/deleterole/deleterole.component';\nimport { UpdateroleComponent } from './dialogs/updaterole/updaterole.component';\nimport { DeleteuserComponent } from './dialogs/deleteuser/deleteuser.component';\nimport { UpdatepasswordComponent } from './dialogs/updatepassword/updatepassword.component';\n//import { RolesComponent } from './pages/roles/roles.component';\n//import { AddRoleComponent } from './dialogs/roles/add-role.component';\n//import { DeleteroleComponent } from './dialogs/deleterole/deleterole.component';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    AdduserComponent,\n    ForgotpasswordComponent,\n    ResetpasswordComponent,\n    UserprofileComponent,\n    RolesandpermissionsComponent,\n    UserprofileComponent,\n    AddRoleComponent,\n    DeleteroleComponent,\n    UpdateroleComponent,\n    DeleteuserComponent,\n    UpdatepasswordComponent\n    //RolesComponent,\n    //AddRoleComponent,\n   // DeleteroleComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthenticationRoutingModule,\n    CustommaterialsModule,\n    MatProgressBarModule\n  ]\n})\nexport class AuthenticationModule { }\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AuthServiceService } from '../../services/auth-service.service';\nimport { Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\n\n@Component({\n  selector: 'me-deleterole',\n  templateUrl: './deleterole.component.html',\n  styleUrls: ['./deleterole.component.scss']\n})\nexport class DeleteroleComponent implements OnInit {\n\n  row: any = [];\n  constructor(@Optional() @Inject(MAT_DIALOG_DATA) public data: any, public matDialogRef: MatDialogRef<DeleteroleComponent>, private router: Router, public sharedService: SharedserviceService, private authService: AuthServiceService ) { \n    \n  }\n\n  ngOnInit(): void {\n    this.row = this.data.row;\n    console.log(this.data.row);\n  }\n\n  onDelete(){\n    this.sharedService.isLoading.next(true);\n    this.authService.deleteroleById(this.row.id).subscribe(result=>{\n      this.sharedService.isLoading.next(false);\n      console.log(result);\n      if(result.data.id == this.row.id){\n        this.sharedService.openSnackBar(\"Successifully deleted!\")\n      }\n      else{\n        this.sharedService.openSnackBar(\"Error! Not Deleted.\")\n      }\n      //Close dialog\n      this.matDialogRef.close();\n\n    },errorResponse=>{\n      this.sharedService.openSnackBar(\"Error! Not Deleted.\")\n      console.log(\"Error: \"+ errorResponse)\n      //Close dialog\n      this.matDialogRef.close();\n    });\n  }\n\n   //Close dialog\n   onClose(){\n    this.matDialogRef.close();\n  }\n\n\n}\n","<h2 mat-dialog-title>Are you sure you want to delete - {{row.role_title}}({{row.id}})?</h2>\n<hr/>\n<mat-dialog-actions align=\"center\">\n    <button class=\"btn btn-secondary\" (click)=\"onClose()\"  style=\"margin-right: 10px;\">Cancel</button>\n    <button class=\"btn btn-danger\" (click)=\"onDelete()\">Delete</button>\n</mat-dialog-actions>","import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AuthServiceService } from '../../services/auth-service.service';\nimport { Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\n\n@Component({\n  selector: 'me-deleteuser',\n  templateUrl: './deleteuser.component.html',\n  styleUrls: ['./deleteuser.component.scss']\n})\nexport class DeleteuserComponent implements OnInit {\n\n  row: any = [];\n  constructor(@Optional() @Inject(MAT_DIALOG_DATA) public data: any, public matDialogRef: MatDialogRef<DeleteuserComponent>, private router: Router, public sharedService: SharedserviceService, private authService: AuthServiceService ) { \n    \n  }\n\n  ngOnInit(): void {\n    this.row = this.data.row;\n    console.log(this.data.row);\n  }\n\n\n  /*onDelete(){\n    this.sharedService.isLoading.next(true);\n    this.authService.deleteuserById(this.row.id).subscribe(result=>{\n      this.sharedService.isLoading.next(false);\n      console.log(result);\n      if(result.data.id == this.row.id){\n        this.sharedService.openSnackBar(\"Successifully deleted!\")\n      }\n      else{\n        this.sharedService.openSnackBar(\"Error! Not Deleted.\")\n      }\n      //Close dialog\n      this.matDialogRef.close();\n\n    },errorResponse=>{\n      this.sharedService.openSnackBar(\"Error! Not Deleted.\")\n      console.log(\"Error: \"+ errorResponse)\n      //Close dialog\n      this.matDialogRef.close();\n    });\n  }*/\n}\n","<p>deleteuser works!</p>\n","<form [formGroup]=\"ResetForm\">\n    <h2 mat-dialog-title>Enter your email to reset password!</h2>\n    <hr />\n    <mat-dialog-content>\n        <div class=\"form-group col-lg-12 col-sm-12 form-input\">\n          \n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Email</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"email\" placeholder=\"Enter Email\">\n              <small><div *ngIf=\"ResetForm.get('email')?.touched && ResetForm.get('email')?.invalid\" class=\"text-danger\">Enter valid email</div></small>\n            </div>\n          </div>\n          <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"emailSentStatus\">\n            Password reset mail has been sent, check your email!\n          </div>\n          <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"emailExistStatus\">\n            Email does not exist!\n          </div>\n        </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button class=\"btn btn-secondary\" (click)=\"onClose()\" style=\"margin-right: 10px;\">Cancel</button>\n        <button [disabled]=\"ResetForm.invalid  || hidesubmitbutton\" (click)=\"onSubmit()\" type=\"submit\" \n            class=\"btn btn-success\">Submit</button>\n    </mat-dialog-actions>\n</form>\n  <!-- \n  [disabled]=\"ResetForm.invalid\"  -->\n\n  <!-- (click)=\"onSubmit()\" -->","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n@Component({\n  selector: 'me-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.scss']\n})\nexport class ForgotpasswordComponent implements OnInit {\n\n  constructor(public matDialogRef: MatDialogRef<ForgotpasswordComponent>,public sharedService: SharedserviceService,private authService: AuthServiceService) { }\n  ResetForm!: FormGroup;\n  emailSentStatus:boolean = false;\n  emailExistStatus: boolean = false;\n  hidesubmitbutton: boolean = false;\n\n  ngOnInit(): void {\n    //Form Validation\n    this.ResetForm = new FormGroup({\n      email: new FormControl(null,[Validators.required, Validators.email])\n    });\n  }\n\n  onClose(){\n    this.matDialogRef.close();\n  }\n\n  onSubmit(){\n    var formdata = new FormData();\n    formdata.append(\"email\", this.ResetForm.value.email);\n\n    this.sharedService.isLoading.next(true);\n    this.authService.passResetResquest(formdata).subscribe(result=>{\n      this.sharedService.isLoading.next(false);\n      console.log(result);\n      if(result.status == \"Success\"){\n        //this.sharedService.openSnackBar(\"Password reset mail has been sent!\")\n        this.emailExistStatus = false;\n        this.emailSentStatus = true;\n        localStorage.setItem(\"resetmail\",this.ResetForm.value.email);\n        this.hidesubmitbutton = true;\n      }\n      else{\n        //this.sharedService.openFailureSnackBar(\"Email does not exist!\")\n        this.emailExistStatus = true;\n        this.emailSentStatus = false;\n        this.hidesubmitbutton = false;\n      }\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse);\n      this.sharedService.isLoading.next(false);\n      this.emailExistStatus = true;\n        this.emailSentStatus = false;\n      \n    });\n\n  }\n\n}\n","<form [formGroup]=\"RegisterForm\">\n    <h2 mat-dialog-title>Register New User</h2>\n    <hr />\n    <mat-dialog-content>\n        <div class=\"form-group col-lg-12 col-sm-12 form-input\">\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Name</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"name\" placeholder=\"Enter Name\">\n              <small><div *ngIf=\"RegisterForm.get('name')?.touched && RegisterForm.get('name')?.invalid\" class=\"text-danger\">Name is required</div></small>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Email</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"email\" placeholder=\"Enter Email\">\n              <small><div *ngIf=\"RegisterForm.get('email')?.touched && RegisterForm.get('email')?.invalid\" class=\"text-danger\">Enter valid email</div></small>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n                <label >Institution</label>\n                <select formControlName=\"institution\" class=\"form-control form-control-sm\">\n                 <option value=\"\" [selected]=\"true\"></option>\n                  <option *ngFor=\"let institution of institutions\" value=\"{{institution.id}}\" >{{institution.inst_name}}</option>\n                </select>\n                <div *ngIf=\"RegisterForm.get('institution')?.touched && RegisterForm.get('institution')?.invalid\"\n                    class=\"text-danger\">Institution is required</div>\n              </div>\n              <div class=\"form-group col\">\n                <label >Role</label>\n                <select formControlName=\"role\" class=\"form-control form-control-sm\">\n                    <option value=\"\" [selected]=\"true\"></option>\n                    <option *ngFor=\"let role of roles\" value=\"{{role.id}}\" >{{role.role_title}}</option>\n                </select>\n                <div *ngIf=\"RegisterForm.get('role')?.touched && RegisterForm.get('role')?.invalid\"\n                    class=\"text-danger\">Role is required</div>\n              </div>\n        </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Password</label>\n              <input type=\"password\" class=\"form-control form-control-sm\" formControlName=\"password\" placeholder=\"Enter Password\">\n              <small><div *ngIf=\"RegisterForm.get('password')?.touched && RegisterForm.get('password')?.invalid\" class=\"text-danger\">Password is required</div></small>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Confirm Password</label>\n              <input type=\"password\" class=\"form-control form-control-sm\" formControlName=\"password2\" placeholder=\"Confirm Password\">\n              <small><div *ngIf=\"RegisterForm.get('password2')?.touched && RegisterForm.get('password2')?.invalid\" class=\"text-danger\">Confirm your password</div></small>\n            </div>\n          </div>\n        </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button class=\"btn btn-secondary\" (click)=\"onClose()\" style=\"margin-right: 10px;\">Cancel</button>\n        <button [disabled]=\"RegisterForm.invalid\" (click)=\"onSubmit()\" type=\"submit\" \n            class=\"btn btn-success\">Submit</button>\n    </mat-dialog-actions>\n</form>\n  <!-- \n  [disabled]=\"RegisterForm.invalid\"  -->\n\n  <!-- (click)=\"onSubmit()\" -->","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n@Component({\n  selector: 'me-adduser',\n  templateUrl: './adduser.component.html',\n  styleUrls: ['./adduser.component.scss']\n})\nexport class AdduserComponent implements OnInit {\n\n \n  constructor(public matDialogRef: MatDialogRef<AdduserComponent>, private router: Router, public sharedService: SharedserviceService, private authService: AuthServiceService) { }\n  RegisterForm!: FormGroup;\n  institutions: any [] = [];\n  roles: any [] = [];\n\n  ngOnInit(): void {\n    this.getInstitutions();\n    this.getRoles();\n    //Form Validation\n    this.RegisterForm = new FormGroup({\n      email: new FormControl(null,[Validators.required, Validators.email]),\n      name: new FormControl(null,[Validators.required]),\n      institution: new FormControl(null,[Validators.required,Validators.minLength(1)]),\n      role: new FormControl(null,[Validators.required,Validators.minLength(1)]),\n      password: new FormControl(null,[Validators.required]),\n      password2: new FormControl(null,[Validators.required])\n\n    });\n  }\n\n  onSubmit(){\n    var formdata = new FormData();\n    formdata.append(\"name\", this.RegisterForm.value.name);\n    formdata.append(\"email\", this.RegisterForm.value.email);\n    formdata.append(\"password\", this.RegisterForm.value.password);\n    formdata.append(\"institution_id\", this.RegisterForm.value.institution);\n    formdata.append(\"role_id\", this.RegisterForm.value.role);\n    formdata.append(\"status\", \"true\");\n    if(this.RegisterForm.value.password != this.RegisterForm.value.password2){\n      this.sharedService.openFailureSnackBar(\"Password must match!\")\n    }\n    else{\n      this.sharedService.isLoading.next(true);\n      this.authService.registerUser(formdata).subscribe(result=>{\n        this.sharedService.isLoading.next(false);\n        //console.log(result);\n        if(result.status == \"success\"){\n          this.sharedService.openSnackBar(\"Successifully registered!\")\n          //this.router.navigate(['/cms']);\n          this.matDialogRef.close();\n        }\n        else{\n          this.sharedService.openFailureSnackBar(\"Unable to register!\")\n        }\n\n      },errorResponse=>{\n        console.log(\"Error: \"+ errorResponse)\n      });\n    }\n  }\n\n  onClose(){\n    this.matDialogRef.close();\n  }\n\n  getInstitutions(){\n    this.sharedService.isLoading.next(true);\n    this.authService.getInstitutions().subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.institutions = result.data;\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n\n  getRoles(){\n    this.sharedService.isLoading.next(true);\n    this.authService.getRoles().subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.roles = result.data;\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n  \n\n}\n","<form [formGroup]=\"RoleForm\">\n    <h2 mat-dialog-title>Register New Role</h2>\n    <hr />\n    <mat-dialog-content>\n        <div class=\"form-group col-lg-12 col-sm-12 form-input\">\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Role Title</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"role_title\" placeholder=\"Enter Title\">\n              <small><div *ngIf=\"RoleForm.get('role_title')?.touched && RoleForm.get('role_title')?.invalid\" class=\"text-danger\">Title is required</div></small>\n            </div>\n          </div>\n         \n         \n        \n          \n        </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button class=\"btn btn-secondary\" (click)=\"onClose()\" style=\"margin-right: 10px;\">Cancel</button>\n        <button [disabled]=\"RoleForm.invalid\" (click)=\"onSubmit()\" type=\"submit\" \n            class=\"btn btn-success\">Submit</button>\n    </mat-dialog-actions>\n</form>\n  <!-- \n  [disabled]=\"RoleForm.invalid\"  -->\n\n  <!-- (click)=\"onSubmit()\" -->","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n@Component({\n  selector: 'me-add-role',\n  templateUrl: './add-role.component.html',\n  styleUrls: ['./add-role.component.scss']\n})\nexport class AddRoleComponent implements OnInit {\n\n  constructor(public matDialogRef: MatDialogRef<AddRoleComponent>, private router: Router, public sharedService: SharedserviceService, private authService: AuthServiceService) { }\n\n  RoleForm!: FormGroup;\n  \n  ngOnInit(): void {\n    //this.getInstitutions();\n    //this.getRoles();\n    //Form Validation\n    this.RoleForm = new FormGroup({\n      \n      role_title: new FormControl(null,[Validators.required,Validators.minLength(1)])\n     \n\n    });\n  }\n\n  onSubmit(){\n    let date = new Date().toLocaleString();\n    var formdata = new FormData();\n   \n    formdata.append(\"role_title\", this.RoleForm.value.role_title);\n    formdata.append(\"status\", \"true\");\n    formdata.append(\"created_at\", date);\n   \n    \n      this.sharedService.isLoading.next(true);\n      this.authService.registerRole(formdata).subscribe(result=>{\n        this.sharedService.isLoading.next(false);\n        console.log(result);\n        if(result.data.title != null){\n          this.sharedService.openSnackBar(\"Successifully registered!\")\n          //this.router.navigate(['/cms']);\n          this.matDialogRef.close();\n        }\n        else{\n          this.sharedService.openFailureSnackBar(\"Unable to register!\")\n        }\n\n      },errorResponse=>{\n        console.log(\"Error: \"+ errorResponse)\n      });\n    \n  }\n\n  onClose(){\n    this.matDialogRef.close();\n  }\n\n\n}\n","<form [formGroup]=\"RoleForm\">\n    <h2 mat-dialog-title>Update Role</h2>\n    <hr />\n    <mat-dialog-content>\n        <div class=\"form-group col-lg-12 col-sm-12 form-input\">\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Role Title</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"role_title\" placeholder=\"Enter Title\">\n              <small><div *ngIf=\"RoleForm.get('role_title')?.touched && RoleForm.get('role_title')?.invalid\" class=\"text-danger\">Title is required</div></small>\n            </div>\n          </div>\n         \n         \n          <!--(click)=\"onSubmit()\"-->\n          \n        </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button class=\"btn btn-secondary\" (click)=\"onClose()\" style=\"margin-right: 10px;\">Cancel</button>\n        <button [disabled]=\"RoleForm.invalid\"  type=\"submit\" (click)=\"onSubmit()\"\n            class=\"btn btn-success\">Submit</button>\n    </mat-dialog-actions>\n</form>\n  <!-- \n  [disabled]=\"RoleForm.invalid\"  -->\n\n  <!-- (click)=\"onSubmit()\" -->","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n@Component({\n  selector: 'me-updaterole',\n  templateUrl: './updaterole.component.html',\n  styleUrls: ['./updaterole.component.scss']\n})\nexport class UpdateroleComponent implements OnInit {\n\n  constructor(@Optional() @Inject(MAT_DIALOG_DATA) public data: any, public matDialogRef: MatDialogRef< UpdateroleComponent>, private router: Router, public sharedService: SharedserviceService, private authService: AuthServiceService) { }\n\n  RoleForm!: FormGroup;\n\n  record_id: any = null;\n\n  user:any = \"default\";\n\n\n  ngOnInit(): void {\n    //Get current data\n    console.log(this.data.row);\n    //Get record id\n    this.user = localStorage.getItem('user');\n    \n    this.record_id = this.data.row.id;\n    //this.getInstitutions();\n    //this.getRoles();\n    //Form Validation\n    this.RoleForm = new FormGroup({\n      \n      role_title: new FormControl(this.data.row.role_title,[Validators.required,Validators.minLength(1)])\n     \n\n    });\n  }\n\n  onSubmit(){\n    var formdata = new FormData();\n\n    //this.LeaderForm.value.name\n   \n    //formdata.append(\"role_title\", this.RoleForm.value.role_title);\n    formdata.append(\"role_title\", \"Administrator\");\n    formdata.append(\"status\", \"true\");\n    formdata.append(\"created_at\", \"2021-12-12\");\n   \n    \n      this.sharedService.isLoading.next(true);\n      this.authService.updateRoleById(this.record_id,formdata).subscribe(result=>{\n        this.sharedService.isLoading.next(false);\n        //console.log(result);\n        if(result.status == \"201 Created\"){\n          this.sharedService.openSnackBar(\"Successifully registered!\")\n          //this.router.navigate(['/cms']);\n          this.matDialogRef.close();\n        }\n        else{\n          this.sharedService.openFailureSnackBar(\"Unable to register!\")\n        }\n\n      },errorResponse=>{\n        console.log(\"Error: \"+ errorResponse)\n      });\n    \n  }\n\n\n  onClose(){\n    this.matDialogRef.close();\n  }\n\n}\n","\n<!-- spinner -->\n<div class=\"spinner-container\">\n  <div *ngIf=\"sharedService.isLoading | async\">\n      <mat-progress-bar mode=\"indeterminate\" style=\"color: goldenrod;\"></mat-progress-bar>\n  </div>\n</div>\n\n<div class=\"login-content\">\n  <div class=\"title\">\n    <h2>THE UNITED REPUBLIC OF TANZANIA</h2>\n    <h3>MINISTRY OF NATURAL RESOURCES AND TOURISM</h3>\n  </div>\n    <div class=\"login-form\">\n      <form [formGroup]=\"LoginForm\">\n          <div class=\"banner\">\n              <img src=\"/assets/images/logo.png\">\n          </div>\n        <div class=\"form-header\">\n          Change Request Management\n        </div>\n        <div class=\"form-group col-lg-12 col-sm-12 form-input\">\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Email</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"email\" placeholder=\"Enter Email\">\n            <small><div *ngIf=\"LoginForm.get('email')?.touched && LoginForm.get('email')?.invalid\" class=\"text-danger\">Enter valid email</div></small>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Password</label>\n              <input type=\"password\" class=\"form-control form-control-sm\" formControlName=\"password\" placeholder=\"Enter Password\">\n              <small><div *ngIf=\"LoginForm.get('password')?.touched && LoginForm.get('password')?.invalid\" class=\"text-danger\">Passsword is required</div></small>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <button [disabled]=\"LoginForm.invalid\"  type=\"submit\" class=\"form-control btn btn-success\" (click)=\"onLogin()\">Login</button>\n            </div>\n          </div>\n          <div (click)=\"forgotPassword()\" class=\"forgot-password\">\n            Forgot Passsword?\n          </div>\n          \n        </div>\n      </form>\n    </div>\n  </div>\n  <!-- \n  [disabled]=\"LoginForm.invalid\"  -->","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { ForgotpasswordComponent } from '../../dialogs/forgotpassword/forgotpassword.component';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n@Component({\n  selector: 'me-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public sharedService: SharedserviceService, private authService: AuthServiceService, private router: Router, private dialog: MatDialog,) { }\n  LoginForm!: FormGroup;\n\n  ngOnInit(): void {\n    //Form Validation\n    this.LoginForm = new FormGroup({\n      email: new FormControl(null,[Validators.required, Validators.email]),\n      password: new FormControl(null,[Validators.required]),\n     \n    });\n  }\n\n  onLogin(){\n    var formdata = new FormData();\n    formdata.append(\"email\", this.LoginForm.value.email);\n    formdata.append(\"password\", this.LoginForm.value.password);\n\n    // formdata.append(\"email\", \"maro.emmanuel1@gmail.com\");\n    // formdata.append(\"password\", \"12345678\");\n\n    this.sharedService.isLoading.next(true);\n    this.authService.userLogin(formdata).subscribe(result=>{\n      this.sharedService.isLoading.next(false);\n      console.log(result.token);\n      if(result.token != null){\n\n        this.authService.saveUserData(result);\n        this.router.navigate(['/dashboard']);\n      }\n      else{\n        this.sharedService.openFailureSnackBar(\"Wrong email or password!\")\n      }\n\n    },errorResponse=>{\n      this.sharedService.isLoading.next(false);\n      this.sharedService.openFailureSnackBar(\"Wrong email or password!\")\n      console.log(\"Error: \"+ errorResponse)\n    });\n\n  }\n\n  forgotPassword(){\n    const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = false;\n        dialogConfig.autoFocus = true;\n        dialogConfig.width = \"50%\";\n        //dialogConfig.height=\"90%\";\n    this.dialog.open(ForgotpasswordComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n    \n    });\n  }\n\n}\n","<div class=\"current-route\">\n    <div>Registered User</div>\n</div>\n\n<mat-card>\n    <mat-card-content>\n        <div class=\"obj-header\">\n            <div class=\"heading\">\n                <h2>Add New User</h2>\n            </div>\n            <div>\n                <button class=\"add\" mat-button (click)=\"onAdd()\">\n                    <mat-icon style=\"font-size: xx-large !important;\">add_circle</mat-icon>\n                </button>\n            </div>\n        </div>\n        <div class=\"filter\">\n            <input (keyup)=\"applyFilter($any($event.target).value)\" matInput placeholder=\"Search\" class=\"form-control shadow-none\">\n        </div>\n        <mat-table [dataSource]=\"leadersArray\" matSort #leaderstable>\n            <ng-container matColumnDef=\"sn\">\n                <mat-header-cell *matHeaderCellDef> SN </mat-header-cell>\n                <mat-cell *matCellDef=\"let element; let i = index;\"> {{i+1}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"name\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> Name </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"email\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> Email </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"institution\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> Institution </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.institution.inst_name}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"role\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> Role </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.role.role_title}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"status\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> Status </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <div *ngIf=\"element.status == true\">\n                        Enabled\n                    </div>\n                    <div *ngIf=\"element.status == false\">\n                        Disable\n                    </div>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"action\">\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                <mat-cell *matCellDef=\"let row\">\n                    <mat-icon [matMenuTriggerFor]=\"menu\" style=\"cursor: pointer;\">more_vert</mat-icon>\n                    <mat-menu #menu=\"matMenu\">\n                        <!-- <button mat-menu-item (click)=\"onView(row)\">\n                            <mat-icon>visibility</mat-icon>\n                            <span>View</span>\n                        </button>-->\n                        <button mat-menu-item (click)=\"onDelete(row)\">\n                            <mat-icon>person_outline</mat-icon>\n                            <span>Disable</span>\n                        </button>\n                        <!--<button mat-menu-item (click)=\"onUpdate(row)\">\n                            <mat-icon>update</mat-icon>\n                            <span>Update</span>\n                        </button> -->\n                    </mat-menu>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"leadersdisplayedColumns\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: leadersdisplayedColumns;\"></mat-row>\n        </mat-table>\n        <mat-paginator [length]=\"leadersArray.data.length\" [pageSizeOptions]=\"[5,10,15,20]\" [pageIndex]=\"0\"\n            [pageSize]=\"10\" showFirstLastButtons></mat-paginator>\n\n    </mat-card-content>\n</mat-card>\n\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { RolepermissionService } from 'src/app/shared/services/rolepermission.service';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AdduserComponent } from '../../dialogs/register/adduser.component';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n@Component({\n  selector: 'me-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  \n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild('leaderstable') leaderstable!: MatTable<any>;\n\n  constructor(private authService: AuthServiceService, private dialog: MatDialog, public sharedService: SharedserviceService, private rolepermissionService: RolepermissionService) { }\n  data: any = []\n  leadersArray = new MatTableDataSource<any>();\n  leadersdisplayedColumns = [\"sn\",\"name\",\"email\",\"institution\",\"role\",\"status\",\"action\"];\n  permissions = {\"institutionadmin\":false,\"superadmin\":false};\n  userrolepermissionArray: any[] = [];\n\n  ngOnInit(): void {\n\n    this.checklist_rolepermission(localStorage.getItem('role_id'));\n\n    \n\n  }\n\n  getRegisteredUsers(){\n    this.sharedService.isLoading.next(true);\n    this.authService.getRegisteredUsers().subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.leadersArray.data = result.data;\n      this.leadersArray.sort = this.sort;\n      this.leadersArray.paginator = this.paginator;\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n\n  getRegisteredUsersByInstID(inst_id:any){\n    this.sharedService.isLoading.next(true);\n    this.authService.getRegisteredUsersByInstID(inst_id).subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.leadersArray.data = result.data;\n      this.leadersArray.sort = this.sort;\n      this.leadersArray.paginator = this.paginator;\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n\n  onAdd(){\n    const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = false;\n        dialogConfig.autoFocus = true;\n        dialogConfig.width = \"50%\";\n        //dialogConfig.height=\"90%\";\n    this.dialog.open(AdduserComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n      if(this.permissions.superadmin){\n        this.getRegisteredUsers();\n      }\n      else if(this.permissions.institutionadmin){\n        this.getRegisteredUsersByInstID(localStorage.getItem('institution_id'));\n      }\n    });\n  }\n\n  // onUpdate(row:any){\n  //  //this.messagesService.openSnackBar(\"Update id\"+id);\n  //  const dialogConfig = new MatDialogConfig();\n  //       dialogConfig.disableClose = false;\n  //       dialogConfig.autoFocus = true;\n  //       dialogConfig.width = \"80%\";\n  //       //dialogConfig.height=\"90%\";\n  //       dialogConfig.data = {\"row\":row};\n  //   this.dialog.open(UpdateLeaderComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n  //     this.getLeaders();\n  //   });\n\n  // }\n  // onDelete(row:any){\n  //  const dialogConfig = new MatDialogConfig();\n  //  dialogConfig.disableClose = false;\n  //  dialogConfig.autoFocus = true;\n  //  //dialogConfig.width = \"80%\";\n  //  //dialogConfig.height=\"90%\";\n  //  dialogConfig.data = {\"row\":row};\n  //   this.dialog.open(DeleteLeaderComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n  //   this.getLeaders();\n  // });\n  // }\n\n  onDelete(row:any){\n  //   const dialogConfig = new MatDialogConfig();\n  //   dialogConfig.disableClose = false;\n  //   dialogConfig.autoFocus = true;\n  //   //dialogConfig.width = \"80%\";\n  //   //dialogConfig.height=\"90%\";\n  //   dialogConfig.data = {\"row\":row};\n  //    this.dialog.open(DeleteroleComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n  //     this.getRegisteredUsers();\n  //  });\n   }\n  \n\n  //Filtering\n  applyFilter(filtertext: string){\n    console.log(filtertext);\n    this.leadersArray.filter = filtertext.trim().toLowerCase();\n  }\n\n  //Test method\n  onTestButton(){\n    //this.messagesService.openFailureSnackBar(\"Message!\")\n  }\n\n  checklist_rolepermission(role_id:any){\n    this.sharedService.isLoading.next(true);\n    this.rolepermissionService.getpermissionsByRoleId(role_id).subscribe(result=>{\n      this.sharedService.isLoading.next(false);\n\n      this.userrolepermissionArray = result.data;\n\n      for(var i = 0; i < this.userrolepermissionArray.length; ++i){\n        if(this.userrolepermissionArray[i].permission.permission_code == 'superadmin'){\n          \n          this.permissions.superadmin = true;\n        }\n        if(this.userrolepermissionArray[i].permission.permission_code == 'institutionadmin'){\n          this.permissions.institutionadmin = true;\n        }\n      }\n\n      //console.log(this.permissions.institutionadmin)\n\n      if(this.permissions.superadmin){\n        this.getRegisteredUsers();\n      }\n      else if(this.permissions.institutionadmin){\n        this.getRegisteredUsersByInstID(localStorage.getItem('institution_id'));\n      }\n\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse);\n    });\n  }\n\n\n}\n","\n<!-- spinner -->\n<div class=\"spinner-container\">\n    <div *ngIf=\"sharedService.isLoading | async\">\n        <mat-progress-bar mode=\"indeterminate\" style=\"color: goldenrod;\"></mat-progress-bar>\n    </div>\n  </div>\n  \n  <div class=\"login-content\">\n      <div class=\"login-form\">\n        <form [formGroup]=\"Form\">\n            <!-- <div class=\"banner\">\n                <img src=\"/assets/images/logo.png\">\n            </div> -->\n          <div class=\"form-header\">\n              Passsword Resetting\n          </div>\n          <div class=\"form-group col-lg-12 col-sm-12 form-input\">\n            <div class=\"form-row\">\n              <div class=\"form-group col\">\n                <label>Password</label>\n                <input type=\"password\" class=\"form-control form-control-sm\" formControlName=\"password\" placeholder=\"Enter Password\">\n                <small><div *ngIf=\"Form.get('password')?.touched && Form.get('password')?.invalid\" class=\"text-danger\">Passsword is required</div></small>\n              </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col\">\n                  <label>Confirm Password</label>\n                  <input type=\"password\" class=\"form-control form-control-sm\" formControlName=\"password2\" placeholder=\"Confirm Password\">\n                  <small><div *ngIf=\"Form.get('password2')?.touched && Form.get('password2')?.invalid\" class=\"text-danger\">Confirm Passsword</div></small>\n                </div>\n              </div>\n            <div class=\"form-row\">\n              <div class=\"form-group col\">\n                <button [disabled]=\"Form.invalid\"  type=\"submit\" class=\"form-control btn btn-success\" (click)=\"onSubmit()\">Submit</button>\n              </div>\n            </div>\n            \n          </div>\n        </form>\n      </div>\n    </div>\n    <!-- \n    [disabled]=\"Form.invalid\"  -->","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n\n@Component({\n  selector: 'me-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.scss']\n})\nexport class ResetpasswordComponent implements OnInit {\n\n  \n  constructor(public sharedService: SharedserviceService, private authService: AuthServiceService, private router: Router, private dialog: MatDialog,private route: ActivatedRoute) { }\n  Form!: FormGroup;\n  token: any;\n  \n\n  ngOnInit(): void {\n    //get parameter link\n    this.route.queryParams\n    .subscribe(params => {\n      console.log(params); \n      this.token = params.token;\n      console.log(this.token); \n    }\n  );\n\n    //Form Validation\n    this.Form = new FormGroup({\n      password: new FormControl(null,[Validators.required]),\n      password2: new FormControl(null,[Validators.required]),\n    });\n\n  }\n\n  onSubmit(){\n\n    if(this.Form.value.password == this.Form.value.password2){\n    var formdata = new FormData();\n    formdata.append(\"token\", this.token);\n    formdata.append(\"password\", this.Form.value.password);\n    formdata.append(\"email\", localStorage.getItem(\"resetmail\"));\n\n    this.sharedService.isLoading.next(true);\n    this.authService.updatePassword(formdata).subscribe(result=>{\n      this.sharedService.isLoading.next(false);\n      console.log(result.token);\n\n      if(result.status == \"Success\"){\n\n        this.sharedService.openSnackBar(\"Password updated successfully!\")\n        localStorage.removeItem(\"resetmail\");\n        this.router.navigate(['/login']);\n        \n      }\n      else{\n        this.sharedService.openFailureSnackBar(\"Token failure, kindly send another request!\")\n      }\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n\n  }\n  else{\n    this.sharedService.openFailureSnackBar(\"Password does not match!\");\n  }\n\n  }\n\n\n}\n","<div class=\"current-route\">\n    <div>Roles and Permission</div>\n</div>\n\n<div class=\"row no-gutters\">\n    <div class=\"col-lg-6 col-md-12\">\n        <mat-card>\n            <mat-card-content>\n                <div class=\"obj-header\">\n                    <div class=\"heading\">\n                        <h2>Roles</h2>\n                    </div>\n                    <div>\n                        <button class=\"add\" mat-button (click)=\"onAdd()\">\n                            <mat-icon style=\"font-size: xx-large !important;\">add_circle</mat-icon>\n                        </button>\n                    </div>\n                </div>\n                <mat-table [dataSource]=\"rolesArray\" matSort #table>\n                    <ng-container matColumnDef=\"sn\">\n                        <mat-header-cell *matHeaderCellDef> SN </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element; let i = index;\"> {{i+1}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"role_title\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> Role Title </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.role_title}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"action\">\n                        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\">\n                            <mat-icon [matMenuTriggerFor]=\"menu\" style=\"cursor: pointer;\">more_vert</mat-icon>\n                            <mat-menu #menu=\"matMenu\">\n                                <!-- <button mat-menu-item (click)=\"onView(row)\">\n                            <mat-icon>visibility</mat-icon>\n                            <span>View</span>\n                        </button>-->\n                        <button mat-menu-item (click)=\"onDelete(row)\">\n                            <mat-icon style=\"color: red !important;\">delete</mat-icon>\n                            <span>Delete</span>\n                        </button>\n                        <button mat-menu-item (click)=\"onUpdate(row)\">\n                            <mat-icon>update</mat-icon>\n                            <span>Update</span>\n                        </button> \n                            </mat-menu>\n                        </mat-cell>\n                    </ng-container>\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n                </mat-table>\n                <mat-paginator [length]=\"rolesArray.data.length\" [pageSizeOptions]=\"[5,10,15,20]\" [pageIndex]=\"0\"\n                    [pageSize]=\"10\" showFirstLastButtons></mat-paginator>\n\n            </mat-card-content>\n        </mat-card>\n    </div>\n    <div class=\"col-lg-6\">\n        <mat-card>\n            <mat-card-content>\n                <div class=\"heading\">\n                    <h2>Permission</h2>\n                </div>\n                <form [formGroup]=\"rolesForm\">\n                    <div class=\"form-row\">\n                        <div class=\"form-group col\">\n                            <label>Select Role</label>\n                            <select formControlName=\"selected_role\" (change)=\"onRoleChange($event.target.value)\"\n                                class=\"form-control form-control-sm\">\n                                <option value=\"\" [selected]=\"true\"></option>\n                                <option *ngFor=\"let role of roles\" value=\"{{role.id}}\">{{role.role_title}}</option>\n                            </select>\n                        </div>\n                    </div>\n                </form>\n                <div class=\"row\" style=\"background: whitesmoke;\">\n                    <div class=\"col\">\n                        <div cdkDropListGroup>\n                            <div class=\"row\">\n                                <div class=\"col-md-12 col-lg-6 permission-container\">\n                                    <h3>Current Permission</h3>\n\n                                    <div cdkDropList [cdkDropListData]=\"rolepermissions\" class=\"permission-list\"\n                                        (cdkDropListDropped)=\"drop($event)\">\n                                        <div class=\"permission-box\" *ngFor=\"let rolepermission of rolepermissions\"\n                                            cdkDrag>{{rolepermission.permission_code}}</div>\n                                        <div class=\"permission-box\" *ngIf=\"rolepermissions.length == 0\">No permission</div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col permission-container\">\n                                    <h3>Available Permission</h3>\n\n                                    <div cdkDropList [cdkDropListData]=\"allpermissions\" class=\"permission-list\"\n                                        (cdkDropListDropped)=\"drop($event)\">\n                                        <div class=\"permission-box\" *ngFor=\"let permission of allpermissions\" cdkDrag>\n                                            {{permission.permission_code}}</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style=\"padding: 10px;\">\n                            <button [disabled]=\"selected_role_id == null || selected_role_id == ''\" class=\"btn btn-success\" (click)=\"onsavePermission()\">Save</button>\n                        </div>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>","import { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { ThrowStmt } from '@angular/compiler';\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AuthServiceService } from '../../services/auth-service.service';\nimport { AddRoleComponent } from '../../dialogs/roles/add-role.component';\nimport { DeleteroleComponent } from '../../dialogs/deleterole/deleterole.component';\nimport { UpdateroleComponent } from '../../dialogs/updaterole/updaterole.component';\n\n@Component({\n  selector: 'me-rolesandpermissions',\n  templateUrl: './rolesandpermissions.component.html',\n  styleUrls: ['./rolesandpermissions.component.scss']\n})\nexport class RolesandpermissionsComponent implements OnInit {\n\n  \n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild('table') leaderstable!: MatTable<any>;\n\n  constructor(private authService: AuthServiceService, private dialog: MatDialog, public sharedService: SharedserviceService, private changeDetectorRef: ChangeDetectorRef) { }\n  rolesForm!: FormGroup;\n  rolesArray = new MatTableDataSource<any>();\n  displayedColumns = [\"sn\",\"role_title\",\"action\"];\n  selected_role_id: any;\n  roles:any[] = [];\n  rolepermissions: any[] = []\n  rolepermissionsObj: any[] = []\n  rolepermissionTosave: any[] = []\n  allpermissions: any[] = []\n  allpermissionsObj: any[] = []\n  \n\n  ngOnInit(): void {\n\n    this.getallPermission();\n\n    this.getRoles();\n  }\n\n  //for drag and drop event\n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n    }\n\n    console.log(this.rolepermissions);\n  }\n\n  onsavePermission(){\n   \n    this.rolepermissionTosave = [];\n    for(var i = 0; i < this.rolepermissions.length; ++i){\n      this.rolepermissionTosave.push({\"role_id\": this.selected_role_id, \"permission_id\":this.rolepermissions[i].permission_id})\n      }\n    let rolepermissionjson = JSON.stringify({'roles':this.rolepermissionTosave});\n    \n    //console.log(rolepermissionjson);\n\n    //save permission\n    this.sharedService.isLoading.next(true);\n    this.authService.addrolespermission(this.selected_role_id,rolepermissionjson).subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      if(result.message != null){\n        this.sharedService.openSnackBar(\"Permissions saved successifully!\");\n      }\n      else{\n        this.sharedService.openFailureSnackBar(\"Permissions saved saved!\");\n      }\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n\n  }\n\n  getRoles(){\n    this.sharedService.isLoading.next(true);\n    this.authService.getRoles().subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.rolesArray.data = result.data;\n      setTimeout(() => this.rolesArray.sort = this.sort);\n      setTimeout(() => this.rolesArray.paginator = this.paginator);\n\n      this.roles = result.data;\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n\n  getallPermission(){\n    this.allpermissions = [];\n    this.sharedService.isLoading.next(true);\n    this.authService.getallPermissions().subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.allpermissionsObj = result.data;\n      for(var i = 0; i < this.allpermissionsObj.length; ++i){\n        \n      this.allpermissions.push({\"permission_id\":this.allpermissionsObj[i].id, \"permission_code\":this.allpermissionsObj[i].permission_code})\n      }\n\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n\n  getpermissionByRoleId(id:any){\n    this.rolepermissions = [];\n    this.sharedService.isLoading.next(true);\n    this.authService.getpermissionsByRoleId(id).subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.rolepermissionsObj = result.data;\n      for(var i = 0; i < this.rolepermissionsObj.length; ++i){\n        this.rolepermissions.push({\"permission_id\":this.rolepermissionsObj[i].permission.id, \"permission_code\":this.rolepermissionsObj[i].permission.permission_code})\n      }\n\n      this.filteravailablePermission();\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n\n  filteravailablePermission(){\n\n    for(var i = 0; i < this.rolepermissions.length; ++i){\n      this.allpermissions = this.allpermissions.filter(item => item.permission_id != this.rolepermissions[i].permission_id);\n    }\n    //console.log(this.allpermissions);\n  }\n\n  onRoleChange(role_id:any){\n    //console.log(role_id);\n    this.selected_role_id = role_id;\n    this.getallPermission();\n    this.getpermissionByRoleId(role_id);\n\n  }\n\n  onAdd(){\n    const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = false;\n        dialogConfig.autoFocus = true;\n        dialogConfig.width = \"50%\";\n        //dialogConfig.height=\"90%\";\n    this.dialog.open(AddRoleComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n    this.getRoles();\n    });\n  }\n\n  // onUpdate(row:any){\n  //  //this.messagesService.openSnackBar(\"Update id\"+id);\n  //  const dialogConfig = new MatDialogConfig();\n  //       dialogConfig.disableClose = false;\n  //       dialogConfig.autoFocus = true;\n  //       dialogConfig.width = \"80%\";\n  //       //dialogConfig.height=\"90%\";\n  //       dialogConfig.data = {\"row\":row};\n  //   this.dialog.open(UpdateLeaderComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n  //     this.getLeaders();\n  //   });\n\n  // }\n\n  onUpdate(row:any){\n    //this.messagesService.openSnackBar(\"Update id\"+id);\n    const dialogConfig = new MatDialogConfig();\n         dialogConfig.disableClose = false;\n         dialogConfig.autoFocus = true;\n         dialogConfig.width = \"80%\";\n         //dialogConfig.height=\"90%\";\n         dialogConfig.data = {\"row\":row};\n     this.dialog.open(UpdateroleComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n      this.getRoles();\n     });\n \n   }\n\n\n\n  onDelete(row:any){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    //dialogConfig.width = \"80%\";\n    //dialogConfig.height=\"90%\";\n    dialogConfig.data = {\"row\":row};\n     this.dialog.open(DeleteroleComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n      this.getRoles();\n   });\n   }\n\n\n  // onDelete(row:any){\n  //  const dialogConfig = new MatDialogConfig();\n  //  dialogConfig.disableClose = false;\n  //  dialogConfig.autoFocus = true;\n  //  //dialogConfig.width = \"80%\";\n  //  //dialogConfig.height=\"90%\";\n  //  dialogConfig.data = {\"row\":row};\n  //   this.dialog.open(DeleteLeaderComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n  //   this.getLeaders();\n  // });\n  // }\n\n\n\n\n  \n  // onView(row:any){\n  //   const dialogConfig = new MatDialogConfig();\n  //  dialogConfig.disableClose = false;\n  //  dialogConfig.autoFocus = true;\n  //  //dialogConfig.width = \"80%\";\n  //  //dialogConfig.height=\"90%\";\n  //  dialogConfig.data = {\"row\":row};\n  // this.dialog.open(ViewLeaderComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n  // //this.getLeaders();\n  // });\n  // }\n\n\n}\n"]}
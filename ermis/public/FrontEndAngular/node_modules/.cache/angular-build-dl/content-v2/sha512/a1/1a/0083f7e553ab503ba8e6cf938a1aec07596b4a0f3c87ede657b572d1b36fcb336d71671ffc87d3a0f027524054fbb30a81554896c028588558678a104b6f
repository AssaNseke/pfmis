{"version":3,"file":"src_app_authentication_authentication_module_ts-es2015.js","mappings":"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","sources":["./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/dialogs/deleterole/deleterole.component.ts","./src/app/authentication/dialogs/deleterole/deleterole.component.html","./src/app/authentication/dialogs/deleteuser/deleteuser.component.ts","./src/app/authentication/dialogs/deleteuser/deleteuser.component.html","./src/app/authentication/dialogs/forgotpassword/forgotpassword.component.ts","./src/app/authentication/dialogs/forgotpassword/forgotpassword.component.html","./src/app/authentication/dialogs/register/adduser.component.ts","./src/app/authentication/dialogs/register/adduser.component.html","./src/app/authentication/dialogs/roles/add-role.component.ts","./src/app/authentication/dialogs/roles/add-role.component.html","./src/app/authentication/dialogs/updaterole/updaterole.component.ts","./src/app/authentication/dialogs/updaterole/updaterole.component.html","./src/app/authentication/pages/login/login.component.ts","./src/app/authentication/pages/login/login.component.html","./src/app/authentication/pages/register/register.component.ts","./src/app/authentication/pages/register/register.component.html","./src/app/authentication/pages/resetpassword/resetpassword.component.ts","./src/app/authentication/pages/resetpassword/resetpassword.component.html","./src/app/authentication/pages/rolesandpermissions/rolesandpermissions.component.ts","./src/app/authentication/pages/rolesandpermissions/rolesandpermissions.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { ResetpasswordComponent } from './pages/resetpassword/resetpassword.component';\nimport { RolesandpermissionsComponent } from './pages/rolesandpermissions/rolesandpermissions.component';\n//import { RolesComponent } from './pages/roles/roles.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:LoginComponent\n  },\n  {\n    path:'login',\n    component:LoginComponent\n  },\n  {\n    path:'register',\n    component:RegisterComponent\n  },\n  {\n    path:'resetpassword',\n    component:ResetpasswordComponent\n   },\n  {\n    path:'rolesandpermissions',\n    component:RolesandpermissionsComponent\n  }\n\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { CustommaterialsModule } from '../custommaterials/custommaterials.module';\nimport { AdduserComponent } from './dialogs/register/adduser.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { ForgotpasswordComponent } from './dialogs/forgotpassword/forgotpassword.component';\nimport { ResetpasswordComponent } from './pages/resetpassword/resetpassword.component';\nimport { UserprofileComponent } from './dialogs/userprofile/userprofile.component';\nimport { RolesandpermissionsComponent } from './pages/rolesandpermissions/rolesandpermissions.component';\nimport { AddRoleComponent } from './dialogs/roles/add-role.component';\nimport { DeleteroleComponent } from './dialogs/deleterole/deleterole.component';\nimport { UpdateroleComponent } from './dialogs/updaterole/updaterole.component';\nimport { DeleteuserComponent } from './dialogs/deleteuser/deleteuser.component';\nimport { UpdatepasswordComponent } from './dialogs/updatepassword/updatepassword.component';\n//import { RolesComponent } from './pages/roles/roles.component';\n//import { AddRoleComponent } from './dialogs/roles/add-role.component';\n//import { DeleteroleComponent } from './dialogs/deleterole/deleterole.component';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    AdduserComponent,\n    ForgotpasswordComponent,\n    ResetpasswordComponent,\n    UserprofileComponent,\n    RolesandpermissionsComponent,\n    UserprofileComponent,\n    AddRoleComponent,\n    DeleteroleComponent,\n    UpdateroleComponent,\n    DeleteuserComponent,\n    UpdatepasswordComponent\n    //RolesComponent,\n    //AddRoleComponent,\n   // DeleteroleComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthenticationRoutingModule,\n    CustommaterialsModule,\n    MatProgressBarModule\n  ]\n})\nexport class AuthenticationModule { }\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AuthServiceService } from '../../services/auth-service.service';\nimport { Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\n\n@Component({\n  selector: 'me-deleterole',\n  templateUrl: './deleterole.component.html',\n  styleUrls: ['./deleterole.component.scss']\n})\nexport class DeleteroleComponent implements OnInit {\n\n  row: any = [];\n  constructor(@Optional() @Inject(MAT_DIALOG_DATA) public data: any, public matDialogRef: MatDialogRef<DeleteroleComponent>, private router: Router, public sharedService: SharedserviceService, private authService: AuthServiceService ) { \n    \n  }\n\n  ngOnInit(): void {\n    this.row = this.data.row;\n    console.log(this.data.row);\n  }\n\n  onDelete(){\n    this.sharedService.isLoading.next(true);\n    this.authService.deleteroleById(this.row.id).subscribe(result=>{\n      this.sharedService.isLoading.next(false);\n      console.log(result);\n      if(result.data.id == this.row.id){\n        this.sharedService.openSnackBar(\"Successifully deleted!\")\n      }\n      else{\n        this.sharedService.openSnackBar(\"Error! Not Deleted.\")\n      }\n      //Close dialog\n      this.matDialogRef.close();\n\n    },errorResponse=>{\n      this.sharedService.openSnackBar(\"Error! Not Deleted.\")\n      console.log(\"Error: \"+ errorResponse)\n      //Close dialog\n      this.matDialogRef.close();\n    });\n  }\n\n   //Close dialog\n   onClose(){\n    this.matDialogRef.close();\n  }\n\n\n}\n","<h2 mat-dialog-title>Are you sure you want to delete - {{row.role_title}}({{row.id}})?</h2>\n<hr/>\n<mat-dialog-actions align=\"center\">\n    <button class=\"btn btn-secondary\" (click)=\"onClose()\"  style=\"margin-right: 10px;\">Cancel</button>\n    <button class=\"btn btn-danger\" (click)=\"onDelete()\">Delete</button>\n</mat-dialog-actions>","import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AuthServiceService } from '../../services/auth-service.service';\nimport { Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\n\n@Component({\n  selector: 'me-deleteuser',\n  templateUrl: './deleteuser.component.html',\n  styleUrls: ['./deleteuser.component.scss']\n})\nexport class DeleteuserComponent implements OnInit {\n\n  row: any = [];\n  constructor(@Optional() @Inject(MAT_DIALOG_DATA) public data: any, public matDialogRef: MatDialogRef<DeleteuserComponent>, private router: Router, public sharedService: SharedserviceService, private authService: AuthServiceService ) { \n    \n  }\n\n  ngOnInit(): void {\n    this.row = this.data.row;\n    console.log(this.data.row);\n  }\n\n\n  /*onDelete(){\n    this.sharedService.isLoading.next(true);\n    this.authService.deleteuserById(this.row.id).subscribe(result=>{\n      this.sharedService.isLoading.next(false);\n      console.log(result);\n      if(result.data.id == this.row.id){\n        this.sharedService.openSnackBar(\"Successifully deleted!\")\n      }\n      else{\n        this.sharedService.openSnackBar(\"Error! Not Deleted.\")\n      }\n      //Close dialog\n      this.matDialogRef.close();\n\n    },errorResponse=>{\n      this.sharedService.openSnackBar(\"Error! Not Deleted.\")\n      console.log(\"Error: \"+ errorResponse)\n      //Close dialog\n      this.matDialogRef.close();\n    });\n  }*/\n}\n","<p>deleteuser works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n@Component({\n  selector: 'me-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.scss']\n})\nexport class ForgotpasswordComponent implements OnInit {\n\n  constructor(public matDialogRef: MatDialogRef<ForgotpasswordComponent>,public sharedService: SharedserviceService,private authService: AuthServiceService) { }\n  ResetForm!: FormGroup;\n  emailSentStatus:boolean = false;\n  emailExistStatus: boolean = false;\n  hidesubmitbutton: boolean = false;\n\n  ngOnInit(): void {\n    //Form Validation\n    this.ResetForm = new FormGroup({\n      email: new FormControl(null,[Validators.required, Validators.email])\n    });\n  }\n\n  onClose(){\n    this.matDialogRef.close();\n  }\n\n  onSubmit(){\n    var formdata = new FormData();\n    formdata.append(\"email\", this.ResetForm.value.email);\n\n    this.sharedService.isLoading.next(true);\n    this.authService.passResetResquest(formdata).subscribe(result=>{\n      this.sharedService.isLoading.next(false);\n      console.log(result);\n      if(result.status == \"Success\"){\n        //this.sharedService.openSnackBar(\"Password reset mail has been sent!\")\n        this.emailExistStatus = false;\n        this.emailSentStatus = true;\n        localStorage.setItem(\"resetmail\",this.ResetForm.value.email);\n        this.hidesubmitbutton = true;\n      }\n      else{\n        //this.sharedService.openFailureSnackBar(\"Email does not exist!\")\n        this.emailExistStatus = true;\n        this.emailSentStatus = false;\n        this.hidesubmitbutton = false;\n      }\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse);\n      this.sharedService.isLoading.next(false);\n      this.emailExistStatus = true;\n        this.emailSentStatus = false;\n      \n    });\n\n  }\n\n}\n","<form [formGroup]=\"ResetForm\">\n    <h2 mat-dialog-title>Enter your email to reset password!</h2>\n    <hr />\n    <mat-dialog-content>\n        <div class=\"form-group col-lg-12 col-sm-12 form-input\">\n          \n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Email</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"email\" placeholder=\"Enter Email\">\n              <small><div *ngIf=\"ResetForm.get('email')?.touched && ResetForm.get('email')?.invalid\" class=\"text-danger\">Enter valid email</div></small>\n            </div>\n          </div>\n          <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"emailSentStatus\">\n            Password reset mail has been sent, check your email!\n          </div>\n          <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"emailExistStatus\">\n            Email does not exist!\n          </div>\n        </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button class=\"btn btn-secondary\" (click)=\"onClose()\" style=\"margin-right: 10px;\">Cancel</button>\n        <button [disabled]=\"ResetForm.invalid  || hidesubmitbutton\" (click)=\"onSubmit()\" type=\"submit\" \n            class=\"btn btn-success\">Submit</button>\n    </mat-dialog-actions>\n</form>\n  <!-- \n  [disabled]=\"ResetForm.invalid\"  -->\n\n  <!-- (click)=\"onSubmit()\" -->","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n@Component({\n  selector: 'me-adduser',\n  templateUrl: './adduser.component.html',\n  styleUrls: ['./adduser.component.scss']\n})\nexport class AdduserComponent implements OnInit {\n\n \n  constructor(public matDialogRef: MatDialogRef<AdduserComponent>, private router: Router, public sharedService: SharedserviceService, private authService: AuthServiceService) { }\n  RegisterForm!: FormGroup;\n  institutions: any [] = [];\n  roles: any [] = [];\n\n  ngOnInit(): void {\n    this.getInstitutions();\n    this.getRoles();\n    //Form Validation\n    this.RegisterForm = new FormGroup({\n      email: new FormControl(null,[Validators.required, Validators.email]),\n      name: new FormControl(null,[Validators.required]),\n      institution: new FormControl(null,[Validators.required,Validators.minLength(1)]),\n      role: new FormControl(null,[Validators.required,Validators.minLength(1)]),\n      password: new FormControl(null,[Validators.required]),\n      password2: new FormControl(null,[Validators.required])\n\n    });\n  }\n\n  onSubmit(){\n    var formdata = new FormData();\n    formdata.append(\"name\", this.RegisterForm.value.name);\n    formdata.append(\"email\", this.RegisterForm.value.email);\n    formdata.append(\"password\", this.RegisterForm.value.password);\n    formdata.append(\"institution_id\", this.RegisterForm.value.institution);\n    formdata.append(\"role_id\", this.RegisterForm.value.role);\n    formdata.append(\"status\", \"true\");\n    if(this.RegisterForm.value.password != this.RegisterForm.value.password2){\n      this.sharedService.openFailureSnackBar(\"Password must match!\")\n    }\n    else{\n      this.sharedService.isLoading.next(true);\n      this.authService.registerUser(formdata).subscribe(result=>{\n        this.sharedService.isLoading.next(false);\n        //console.log(result);\n        if(result.status == \"success\"){\n          this.sharedService.openSnackBar(\"Successifully registered!\")\n          //this.router.navigate(['/cms']);\n          this.matDialogRef.close();\n        }\n        else{\n          this.sharedService.openFailureSnackBar(\"Unable to register!\")\n        }\n\n      },errorResponse=>{\n        console.log(\"Error: \"+ errorResponse)\n      });\n    }\n  }\n\n  onClose(){\n    this.matDialogRef.close();\n  }\n\n  getInstitutions(){\n    this.sharedService.isLoading.next(true);\n    this.authService.getInstitutions().subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.institutions = result.data;\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n\n  getRoles(){\n    this.sharedService.isLoading.next(true);\n    this.authService.getRoles().subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.roles = result.data;\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n  \n\n}\n","<form [formGroup]=\"RegisterForm\">\n    <h2 mat-dialog-title>Register New User</h2>\n    <hr />\n    <mat-dialog-content>\n        <div class=\"form-group col-lg-12 col-sm-12 form-input\">\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Name</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"name\" placeholder=\"Enter Name\">\n              <small><div *ngIf=\"RegisterForm.get('name')?.touched && RegisterForm.get('name')?.invalid\" class=\"text-danger\">Name is required</div></small>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Email</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"email\" placeholder=\"Enter Email\">\n              <small><div *ngIf=\"RegisterForm.get('email')?.touched && RegisterForm.get('email')?.invalid\" class=\"text-danger\">Enter valid email</div></small>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n                <label >Institution</label>\n                <select formControlName=\"institution\" class=\"form-control form-control-sm\">\n                 <option value=\"\" [selected]=\"true\"></option>\n                  <option *ngFor=\"let institution of institutions\" value=\"{{institution.id}}\" >{{institution.inst_name}}</option>\n                </select>\n                <div *ngIf=\"RegisterForm.get('institution')?.touched && RegisterForm.get('institution')?.invalid\"\n                    class=\"text-danger\">Institution is required</div>\n              </div>\n              <div class=\"form-group col\">\n                <label >Role</label>\n                <select formControlName=\"role\" class=\"form-control form-control-sm\">\n                    <option value=\"\" [selected]=\"true\"></option>\n                    <option *ngFor=\"let role of roles\" value=\"{{role.id}}\" >{{role.role_title}}</option>\n                </select>\n                <div *ngIf=\"RegisterForm.get('role')?.touched && RegisterForm.get('role')?.invalid\"\n                    class=\"text-danger\">Role is required</div>\n              </div>\n        </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Password</label>\n              <input type=\"password\" class=\"form-control form-control-sm\" formControlName=\"password\" placeholder=\"Enter Password\">\n              <small><div *ngIf=\"RegisterForm.get('password')?.touched && RegisterForm.get('password')?.invalid\" class=\"text-danger\">Password is required</div></small>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Confirm Password</label>\n              <input type=\"password\" class=\"form-control form-control-sm\" formControlName=\"password2\" placeholder=\"Confirm Password\">\n              <small><div *ngIf=\"RegisterForm.get('password2')?.touched && RegisterForm.get('password2')?.invalid\" class=\"text-danger\">Confirm your password</div></small>\n            </div>\n          </div>\n        </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button class=\"btn btn-secondary\" (click)=\"onClose()\" style=\"margin-right: 10px;\">Cancel</button>\n        <button [disabled]=\"RegisterForm.invalid\" (click)=\"onSubmit()\" type=\"submit\" \n            class=\"btn btn-success\">Submit</button>\n    </mat-dialog-actions>\n</form>\n  <!-- \n  [disabled]=\"RegisterForm.invalid\"  -->\n\n  <!-- (click)=\"onSubmit()\" -->","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n@Component({\n  selector: 'me-add-role',\n  templateUrl: './add-role.component.html',\n  styleUrls: ['./add-role.component.scss']\n})\nexport class AddRoleComponent implements OnInit {\n\n  constructor(public matDialogRef: MatDialogRef<AddRoleComponent>, private router: Router, public sharedService: SharedserviceService, private authService: AuthServiceService) { }\n\n  RoleForm!: FormGroup;\n  \n  ngOnInit(): void {\n    //this.getInstitutions();\n    //this.getRoles();\n    //Form Validation\n    this.RoleForm = new FormGroup({\n      \n      role_title: new FormControl(null,[Validators.required,Validators.minLength(1)])\n     \n\n    });\n  }\n\n  onSubmit(){\n    let date = new Date().toLocaleString();\n    var formdata = new FormData();\n   \n    formdata.append(\"role_title\", this.RoleForm.value.role_title);\n    formdata.append(\"status\", \"true\");\n    formdata.append(\"created_at\", date);\n   \n    \n      this.sharedService.isLoading.next(true);\n      this.authService.registerRole(formdata).subscribe(result=>{\n        this.sharedService.isLoading.next(false);\n        console.log(result);\n        if(result.data.title != null){\n          this.sharedService.openSnackBar(\"Successifully registered!\")\n          //this.router.navigate(['/cms']);\n          this.matDialogRef.close();\n        }\n        else{\n          this.sharedService.openFailureSnackBar(\"Unable to register!\")\n        }\n\n      },errorResponse=>{\n        console.log(\"Error: \"+ errorResponse)\n      });\n    \n  }\n\n  onClose(){\n    this.matDialogRef.close();\n  }\n\n\n}\n","<form [formGroup]=\"RoleForm\">\n    <h2 mat-dialog-title>Register New Role</h2>\n    <hr />\n    <mat-dialog-content>\n        <div class=\"form-group col-lg-12 col-sm-12 form-input\">\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Role Title</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"role_title\" placeholder=\"Enter Title\">\n              <small><div *ngIf=\"RoleForm.get('role_title')?.touched && RoleForm.get('role_title')?.invalid\" class=\"text-danger\">Title is required</div></small>\n            </div>\n          </div>\n         \n         \n        \n          \n        </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button class=\"btn btn-secondary\" (click)=\"onClose()\" style=\"margin-right: 10px;\">Cancel</button>\n        <button [disabled]=\"RoleForm.invalid\" (click)=\"onSubmit()\" type=\"submit\" \n            class=\"btn btn-success\">Submit</button>\n    </mat-dialog-actions>\n</form>\n  <!-- \n  [disabled]=\"RoleForm.invalid\"  -->\n\n  <!-- (click)=\"onSubmit()\" -->","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n@Component({\n  selector: 'me-updaterole',\n  templateUrl: './updaterole.component.html',\n  styleUrls: ['./updaterole.component.scss']\n})\nexport class UpdateroleComponent implements OnInit {\n\n  constructor(@Optional() @Inject(MAT_DIALOG_DATA) public data: any, public matDialogRef: MatDialogRef< UpdateroleComponent>, private router: Router, public sharedService: SharedserviceService, private authService: AuthServiceService) { }\n\n  RoleForm!: FormGroup;\n\n  record_id: any = null;\n\n  user:any = \"default\";\n\n\n  ngOnInit(): void {\n    //Get current data\n    console.log(this.data.row);\n    //Get record id\n    this.user = localStorage.getItem('user');\n    \n    this.record_id = this.data.row.id;\n    //this.getInstitutions();\n    //this.getRoles();\n    //Form Validation\n    this.RoleForm = new FormGroup({\n      \n      role_title: new FormControl(this.data.row.role_title,[Validators.required,Validators.minLength(1)])\n     \n\n    });\n  }\n\n  onSubmit(){\n    var formdata = new FormData();\n\n    //this.LeaderForm.value.name\n   \n    //formdata.append(\"role_title\", this.RoleForm.value.role_title);\n    formdata.append(\"role_title\", \"Administrator\");\n    formdata.append(\"status\", \"true\");\n    formdata.append(\"created_at\", \"2021-12-12\");\n   \n    \n      this.sharedService.isLoading.next(true);\n      this.authService.updateRoleById(this.record_id,formdata).subscribe(result=>{\n        this.sharedService.isLoading.next(false);\n        //console.log(result);\n        if(result.status == \"201 Created\"){\n          this.sharedService.openSnackBar(\"Successifully registered!\")\n          //this.router.navigate(['/cms']);\n          this.matDialogRef.close();\n        }\n        else{\n          this.sharedService.openFailureSnackBar(\"Unable to register!\")\n        }\n\n      },errorResponse=>{\n        console.log(\"Error: \"+ errorResponse)\n      });\n    \n  }\n\n\n  onClose(){\n    this.matDialogRef.close();\n  }\n\n}\n","<form [formGroup]=\"RoleForm\">\n    <h2 mat-dialog-title>Update Role</h2>\n    <hr />\n    <mat-dialog-content>\n        <div class=\"form-group col-lg-12 col-sm-12 form-input\">\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Role Title</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"role_title\" placeholder=\"Enter Title\">\n              <small><div *ngIf=\"RoleForm.get('role_title')?.touched && RoleForm.get('role_title')?.invalid\" class=\"text-danger\">Title is required</div></small>\n            </div>\n          </div>\n         \n         \n          <!--(click)=\"onSubmit()\"-->\n          \n        </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n        <button class=\"btn btn-secondary\" (click)=\"onClose()\" style=\"margin-right: 10px;\">Cancel</button>\n        <button [disabled]=\"RoleForm.invalid\"  type=\"submit\" (click)=\"onSubmit()\"\n            class=\"btn btn-success\">Submit</button>\n    </mat-dialog-actions>\n</form>\n  <!-- \n  [disabled]=\"RoleForm.invalid\"  -->\n\n  <!-- (click)=\"onSubmit()\" -->","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { ForgotpasswordComponent } from '../../dialogs/forgotpassword/forgotpassword.component';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n@Component({\n  selector: 'me-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public sharedService: SharedserviceService, private authService: AuthServiceService, private router: Router, private dialog: MatDialog,) { }\n  LoginForm!: FormGroup;\n\n  ngOnInit(): void {\n    //Form Validation\n    this.LoginForm = new FormGroup({\n      email: new FormControl(null,[Validators.required, Validators.email]),\n      password: new FormControl(null,[Validators.required]),\n     \n    });\n  }\n\n  onLogin(){\n    var formdata = new FormData();\n    formdata.append(\"email\", this.LoginForm.value.email);\n    formdata.append(\"password\", this.LoginForm.value.password);\n\n    // formdata.append(\"email\", \"maro.emmanuel1@gmail.com\");\n    // formdata.append(\"password\", \"12345678\");\n\n    this.sharedService.isLoading.next(true);\n    this.authService.userLogin(formdata).subscribe(result=>{\n      this.sharedService.isLoading.next(false);\n      console.log(result.token);\n      if(result.token != null){\n\n        this.authService.saveUserData(result);\n        this.router.navigate(['/dashboard']);\n      }\n      else{\n        this.sharedService.openFailureSnackBar(\"Wrong email or password!\")\n      }\n\n    },errorResponse=>{\n      this.sharedService.isLoading.next(false);\n      this.sharedService.openFailureSnackBar(\"Wrong email or password!\")\n      console.log(\"Error: \"+ errorResponse)\n    });\n\n  }\n\n  forgotPassword(){\n    const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = false;\n        dialogConfig.autoFocus = true;\n        dialogConfig.width = \"50%\";\n        //dialogConfig.height=\"90%\";\n    this.dialog.open(ForgotpasswordComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n    \n    });\n  }\n\n}\n","\n<!-- spinner -->\n<div class=\"spinner-container\">\n  <div *ngIf=\"sharedService.isLoading | async\">\n      <mat-progress-bar mode=\"indeterminate\" style=\"color: goldenrod;\"></mat-progress-bar>\n  </div>\n</div>\n\n<div class=\"login-content\">\n  <div class=\"title\">\n    <h2>THE UNITED REPUBLIC OF TANZANIA</h2>\n    <h3>MINISTRY OF NATURAL RESOURCES AND TOURISM</h3>\n  </div>\n    <div class=\"login-form\">\n      <form [formGroup]=\"LoginForm\">\n          <div class=\"banner\">\n              <img src=\"/assets/images/logo.png\">\n          </div>\n        <div class=\"form-header\">\n          Change Request Management\n        </div>\n        <div class=\"form-group col-lg-12 col-sm-12 form-input\">\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Email</label>\n              <input type=\"text\" class=\"form-control form-control-sm\" formControlName=\"email\" placeholder=\"Enter Email\">\n            <small><div *ngIf=\"LoginForm.get('email')?.touched && LoginForm.get('email')?.invalid\" class=\"text-danger\">Enter valid email</div></small>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <label>Password</label>\n              <input type=\"password\" class=\"form-control form-control-sm\" formControlName=\"password\" placeholder=\"Enter Password\">\n              <small><div *ngIf=\"LoginForm.get('password')?.touched && LoginForm.get('password')?.invalid\" class=\"text-danger\">Passsword is required</div></small>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n              <button [disabled]=\"LoginForm.invalid\"  type=\"submit\" class=\"form-control btn btn-success\" (click)=\"onLogin()\">Login</button>\n            </div>\n          </div>\n          <div (click)=\"forgotPassword()\" class=\"forgot-password\">\n            Forgot Passsword?\n          </div>\n          \n        </div>\n      </form>\n    </div>\n  </div>\n  <!-- \n  [disabled]=\"LoginForm.invalid\"  -->","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { RolepermissionService } from 'src/app/shared/services/rolepermission.service';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AdduserComponent } from '../../dialogs/register/adduser.component';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n@Component({\n  selector: 'me-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  \n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild('leaderstable') leaderstable!: MatTable<any>;\n\n  constructor(private authService: AuthServiceService, private dialog: MatDialog, public sharedService: SharedserviceService, private rolepermissionService: RolepermissionService) { }\n  data: any = []\n  leadersArray = new MatTableDataSource<any>();\n  leadersdisplayedColumns = [\"sn\",\"name\",\"email\",\"institution\",\"role\",\"status\",\"action\"];\n  permissions = {\"institutionadmin\":false,\"superadmin\":false};\n  userrolepermissionArray: any[] = [];\n\n  ngOnInit(): void {\n\n    this.checklist_rolepermission(localStorage.getItem('role_id'));\n\n    \n\n  }\n\n  getRegisteredUsers(){\n    this.sharedService.isLoading.next(true);\n    this.authService.getRegisteredUsers().subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.leadersArray.data = result.data;\n      this.leadersArray.sort = this.sort;\n      this.leadersArray.paginator = this.paginator;\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n\n  getRegisteredUsersByInstID(inst_id:any){\n    this.sharedService.isLoading.next(true);\n    this.authService.getRegisteredUsersByInstID(inst_id).subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.leadersArray.data = result.data;\n      this.leadersArray.sort = this.sort;\n      this.leadersArray.paginator = this.paginator;\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n\n  onAdd(){\n    const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = false;\n        dialogConfig.autoFocus = true;\n        dialogConfig.width = \"50%\";\n        //dialogConfig.height=\"90%\";\n    this.dialog.open(AdduserComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n      if(this.permissions.superadmin){\n        this.getRegisteredUsers();\n      }\n      else if(this.permissions.institutionadmin){\n        this.getRegisteredUsersByInstID(localStorage.getItem('institution_id'));\n      }\n    });\n  }\n\n  // onUpdate(row:any){\n  //  //this.messagesService.openSnackBar(\"Update id\"+id);\n  //  const dialogConfig = new MatDialogConfig();\n  //       dialogConfig.disableClose = false;\n  //       dialogConfig.autoFocus = true;\n  //       dialogConfig.width = \"80%\";\n  //       //dialogConfig.height=\"90%\";\n  //       dialogConfig.data = {\"row\":row};\n  //   this.dialog.open(UpdateLeaderComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n  //     this.getLeaders();\n  //   });\n\n  // }\n  // onDelete(row:any){\n  //  const dialogConfig = new MatDialogConfig();\n  //  dialogConfig.disableClose = false;\n  //  dialogConfig.autoFocus = true;\n  //  //dialogConfig.width = \"80%\";\n  //  //dialogConfig.height=\"90%\";\n  //  dialogConfig.data = {\"row\":row};\n  //   this.dialog.open(DeleteLeaderComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n  //   this.getLeaders();\n  // });\n  // }\n\n  onDelete(row:any){\n  //   const dialogConfig = new MatDialogConfig();\n  //   dialogConfig.disableClose = false;\n  //   dialogConfig.autoFocus = true;\n  //   //dialogConfig.width = \"80%\";\n  //   //dialogConfig.height=\"90%\";\n  //   dialogConfig.data = {\"row\":row};\n  //    this.dialog.open(DeleteroleComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n  //     this.getRegisteredUsers();\n  //  });\n   }\n  \n\n  //Filtering\n  applyFilter(filtertext: string){\n    console.log(filtertext);\n    this.leadersArray.filter = filtertext.trim().toLowerCase();\n  }\n\n  //Test method\n  onTestButton(){\n    //this.messagesService.openFailureSnackBar(\"Message!\")\n  }\n\n  checklist_rolepermission(role_id:any){\n    this.sharedService.isLoading.next(true);\n    this.rolepermissionService.getpermissionsByRoleId(role_id).subscribe(result=>{\n      this.sharedService.isLoading.next(false);\n\n      this.userrolepermissionArray = result.data;\n\n      for(var i = 0; i < this.userrolepermissionArray.length; ++i){\n        if(this.userrolepermissionArray[i].permission.permission_code == 'superadmin'){\n          \n          this.permissions.superadmin = true;\n        }\n        if(this.userrolepermissionArray[i].permission.permission_code == 'institutionadmin'){\n          this.permissions.institutionadmin = true;\n        }\n      }\n\n      //console.log(this.permissions.institutionadmin)\n\n      if(this.permissions.superadmin){\n        this.getRegisteredUsers();\n      }\n      else if(this.permissions.institutionadmin){\n        this.getRegisteredUsersByInstID(localStorage.getItem('institution_id'));\n      }\n\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse);\n    });\n  }\n\n\n}\n","<div class=\"current-route\">\n    <div>Registered User</div>\n</div>\n\n<mat-card>\n    <mat-card-content>\n        <div class=\"obj-header\">\n            <div class=\"heading\">\n                <h2>Add New User</h2>\n            </div>\n            <div>\n                <button class=\"add\" mat-button (click)=\"onAdd()\">\n                    <mat-icon style=\"font-size: xx-large !important;\">add_circle</mat-icon>\n                </button>\n            </div>\n        </div>\n        <div class=\"filter\">\n            <input (keyup)=\"applyFilter($any($event.target).value)\" matInput placeholder=\"Search\" class=\"form-control shadow-none\">\n        </div>\n        <mat-table [dataSource]=\"leadersArray\" matSort #leaderstable>\n            <ng-container matColumnDef=\"sn\">\n                <mat-header-cell *matHeaderCellDef> SN </mat-header-cell>\n                <mat-cell *matCellDef=\"let element; let i = index;\"> {{i+1}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"name\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> Name </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"email\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> Email </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"institution\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> Institution </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.institution.inst_name}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"role\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> Role </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.role.role_title}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"status\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> Status </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <div *ngIf=\"element.status == true\">\n                        Enabled\n                    </div>\n                    <div *ngIf=\"element.status == false\">\n                        Disable\n                    </div>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"action\">\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                <mat-cell *matCellDef=\"let row\">\n                    <mat-icon [matMenuTriggerFor]=\"menu\" style=\"cursor: pointer;\">more_vert</mat-icon>\n                    <mat-menu #menu=\"matMenu\">\n                        <!-- <button mat-menu-item (click)=\"onView(row)\">\n                            <mat-icon>visibility</mat-icon>\n                            <span>View</span>\n                        </button>-->\n                        <button mat-menu-item (click)=\"onDelete(row)\">\n                            <mat-icon>person_outline</mat-icon>\n                            <span>Disable</span>\n                        </button>\n                        <!--<button mat-menu-item (click)=\"onUpdate(row)\">\n                            <mat-icon>update</mat-icon>\n                            <span>Update</span>\n                        </button> -->\n                    </mat-menu>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"leadersdisplayedColumns\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: leadersdisplayedColumns;\"></mat-row>\n        </mat-table>\n        <mat-paginator [length]=\"leadersArray.data.length\" [pageSizeOptions]=\"[5,10,15,20]\" [pageIndex]=\"0\"\n            [pageSize]=\"10\" showFirstLastButtons></mat-paginator>\n\n    </mat-card-content>\n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AuthServiceService } from '../../services/auth-service.service';\n\n\n@Component({\n  selector: 'me-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.scss']\n})\nexport class ResetpasswordComponent implements OnInit {\n\n  \n  constructor(public sharedService: SharedserviceService, private authService: AuthServiceService, private router: Router, private dialog: MatDialog,private route: ActivatedRoute) { }\n  Form!: FormGroup;\n  token: any;\n  \n\n  ngOnInit(): void {\n    //get parameter link\n    this.route.queryParams\n    .subscribe(params => {\n      console.log(params); \n      this.token = params.token;\n      console.log(this.token); \n    }\n  );\n\n    //Form Validation\n    this.Form = new FormGroup({\n      password: new FormControl(null,[Validators.required]),\n      password2: new FormControl(null,[Validators.required]),\n    });\n\n  }\n\n  onSubmit(){\n\n    if(this.Form.value.password == this.Form.value.password2){\n    var formdata = new FormData();\n    formdata.append(\"token\", this.token);\n    formdata.append(\"password\", this.Form.value.password);\n    formdata.append(\"email\", localStorage.getItem(\"resetmail\"));\n\n    this.sharedService.isLoading.next(true);\n    this.authService.updatePassword(formdata).subscribe(result=>{\n      this.sharedService.isLoading.next(false);\n      console.log(result.token);\n\n      if(result.status == \"Success\"){\n\n        this.sharedService.openSnackBar(\"Password updated successfully!\")\n        localStorage.removeItem(\"resetmail\");\n        this.router.navigate(['/login']);\n        \n      }\n      else{\n        this.sharedService.openFailureSnackBar(\"Token failure, kindly send another request!\")\n      }\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n\n  }\n  else{\n    this.sharedService.openFailureSnackBar(\"Password does not match!\");\n  }\n\n  }\n\n\n}\n","\n<!-- spinner -->\n<div class=\"spinner-container\">\n    <div *ngIf=\"sharedService.isLoading | async\">\n        <mat-progress-bar mode=\"indeterminate\" style=\"color: goldenrod;\"></mat-progress-bar>\n    </div>\n  </div>\n  \n  <div class=\"login-content\">\n      <div class=\"login-form\">\n        <form [formGroup]=\"Form\">\n            <!-- <div class=\"banner\">\n                <img src=\"/assets/images/logo.png\">\n            </div> -->\n          <div class=\"form-header\">\n              Passsword Resetting\n          </div>\n          <div class=\"form-group col-lg-12 col-sm-12 form-input\">\n            <div class=\"form-row\">\n              <div class=\"form-group col\">\n                <label>Password</label>\n                <input type=\"password\" class=\"form-control form-control-sm\" formControlName=\"password\" placeholder=\"Enter Password\">\n                <small><div *ngIf=\"Form.get('password')?.touched && Form.get('password')?.invalid\" class=\"text-danger\">Passsword is required</div></small>\n              </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"form-group col\">\n                  <label>Confirm Password</label>\n                  <input type=\"password\" class=\"form-control form-control-sm\" formControlName=\"password2\" placeholder=\"Confirm Password\">\n                  <small><div *ngIf=\"Form.get('password2')?.touched && Form.get('password2')?.invalid\" class=\"text-danger\">Confirm Passsword</div></small>\n                </div>\n              </div>\n            <div class=\"form-row\">\n              <div class=\"form-group col\">\n                <button [disabled]=\"Form.invalid\"  type=\"submit\" class=\"form-control btn btn-success\" (click)=\"onSubmit()\">Submit</button>\n              </div>\n            </div>\n            \n          </div>\n        </form>\n      </div>\n    </div>\n    <!-- \n    [disabled]=\"Form.invalid\"  -->","import { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { ThrowStmt } from '@angular/compiler';\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { SharedserviceService } from 'src/app/shared/services/sharedservice.service';\nimport { AuthServiceService } from '../../services/auth-service.service';\nimport { AddRoleComponent } from '../../dialogs/roles/add-role.component';\nimport { DeleteroleComponent } from '../../dialogs/deleterole/deleterole.component';\nimport { UpdateroleComponent } from '../../dialogs/updaterole/updaterole.component';\n\n@Component({\n  selector: 'me-rolesandpermissions',\n  templateUrl: './rolesandpermissions.component.html',\n  styleUrls: ['./rolesandpermissions.component.scss']\n})\nexport class RolesandpermissionsComponent implements OnInit {\n\n  \n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild('table') leaderstable!: MatTable<any>;\n\n  constructor(private authService: AuthServiceService, private dialog: MatDialog, public sharedService: SharedserviceService, private changeDetectorRef: ChangeDetectorRef) { }\n  rolesForm!: FormGroup;\n  rolesArray = new MatTableDataSource<any>();\n  displayedColumns = [\"sn\",\"role_title\",\"action\"];\n  selected_role_id: any;\n  roles:any[] = [];\n  rolepermissions: any[] = []\n  rolepermissionsObj: any[] = []\n  rolepermissionTosave: any[] = []\n  allpermissions: any[] = []\n  allpermissionsObj: any[] = []\n  \n\n  ngOnInit(): void {\n\n    this.getallPermission();\n\n    this.getRoles();\n  }\n\n  //for drag and drop event\n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n    }\n\n    console.log(this.rolepermissions);\n  }\n\n  onsavePermission(){\n   \n    this.rolepermissionTosave = [];\n    for(var i = 0; i < this.rolepermissions.length; ++i){\n      this.rolepermissionTosave.push({\"role_id\": this.selected_role_id, \"permission_id\":this.rolepermissions[i].permission_id})\n      }\n    let rolepermissionjson = JSON.stringify({'roles':this.rolepermissionTosave});\n    \n    //console.log(rolepermissionjson);\n\n    //save permission\n    this.sharedService.isLoading.next(true);\n    this.authService.addrolespermission(this.selected_role_id,rolepermissionjson).subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      if(result.message != null){\n        this.sharedService.openSnackBar(\"Permissions saved successifully!\");\n      }\n      else{\n        this.sharedService.openFailureSnackBar(\"Permissions saved saved!\");\n      }\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n\n  }\n\n  getRoles(){\n    this.sharedService.isLoading.next(true);\n    this.authService.getRoles().subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.rolesArray.data = result.data;\n      setTimeout(() => this.rolesArray.sort = this.sort);\n      setTimeout(() => this.rolesArray.paginator = this.paginator);\n\n      this.roles = result.data;\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n\n  getallPermission(){\n    this.allpermissions = [];\n    this.sharedService.isLoading.next(true);\n    this.authService.getallPermissions().subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.allpermissionsObj = result.data;\n      for(var i = 0; i < this.allpermissionsObj.length; ++i){\n        \n      this.allpermissions.push({\"permission_id\":this.allpermissionsObj[i].id, \"permission_code\":this.allpermissionsObj[i].permission_code})\n      }\n\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n\n  getpermissionByRoleId(id:any){\n    this.rolepermissions = [];\n    this.sharedService.isLoading.next(true);\n    this.authService.getpermissionsByRoleId(id).subscribe(result=>{\n    this.sharedService.isLoading.next(false);\n      //console.log(result.data);\n      this.rolepermissionsObj = result.data;\n      for(var i = 0; i < this.rolepermissionsObj.length; ++i){\n        this.rolepermissions.push({\"permission_id\":this.rolepermissionsObj[i].permission.id, \"permission_code\":this.rolepermissionsObj[i].permission.permission_code})\n      }\n\n      this.filteravailablePermission();\n\n    },errorResponse=>{\n      console.log(\"Error: \"+ errorResponse)\n    });\n  }\n\n  filteravailablePermission(){\n\n    for(var i = 0; i < this.rolepermissions.length; ++i){\n      this.allpermissions = this.allpermissions.filter(item => item.permission_id != this.rolepermissions[i].permission_id);\n    }\n    //console.log(this.allpermissions);\n  }\n\n  onRoleChange(role_id:any){\n    //console.log(role_id);\n    this.selected_role_id = role_id;\n    this.getallPermission();\n    this.getpermissionByRoleId(role_id);\n\n  }\n\n  onAdd(){\n    const dialogConfig = new MatDialogConfig();\n        dialogConfig.disableClose = false;\n        dialogConfig.autoFocus = true;\n        dialogConfig.width = \"50%\";\n        //dialogConfig.height=\"90%\";\n    this.dialog.open(AddRoleComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n    this.getRoles();\n    });\n  }\n\n  // onUpdate(row:any){\n  //  //this.messagesService.openSnackBar(\"Update id\"+id);\n  //  const dialogConfig = new MatDialogConfig();\n  //       dialogConfig.disableClose = false;\n  //       dialogConfig.autoFocus = true;\n  //       dialogConfig.width = \"80%\";\n  //       //dialogConfig.height=\"90%\";\n  //       dialogConfig.data = {\"row\":row};\n  //   this.dialog.open(UpdateLeaderComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n  //     this.getLeaders();\n  //   });\n\n  // }\n\n  onUpdate(row:any){\n    //this.messagesService.openSnackBar(\"Update id\"+id);\n    const dialogConfig = new MatDialogConfig();\n         dialogConfig.disableClose = false;\n         dialogConfig.autoFocus = true;\n         dialogConfig.width = \"80%\";\n         //dialogConfig.height=\"90%\";\n         dialogConfig.data = {\"row\":row};\n     this.dialog.open(UpdateroleComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n      this.getRoles();\n     });\n \n   }\n\n\n\n  onDelete(row:any){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    //dialogConfig.width = \"80%\";\n    //dialogConfig.height=\"90%\";\n    dialogConfig.data = {\"row\":row};\n     this.dialog.open(DeleteroleComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n      this.getRoles();\n   });\n   }\n\n\n  // onDelete(row:any){\n  //  const dialogConfig = new MatDialogConfig();\n  //  dialogConfig.disableClose = false;\n  //  dialogConfig.autoFocus = true;\n  //  //dialogConfig.width = \"80%\";\n  //  //dialogConfig.height=\"90%\";\n  //  dialogConfig.data = {\"row\":row};\n  //   this.dialog.open(DeleteLeaderComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n  //   this.getLeaders();\n  // });\n  // }\n\n\n\n\n  \n  // onView(row:any){\n  //   const dialogConfig = new MatDialogConfig();\n  //  dialogConfig.disableClose = false;\n  //  dialogConfig.autoFocus = true;\n  //  //dialogConfig.width = \"80%\";\n  //  //dialogConfig.height=\"90%\";\n  //  dialogConfig.data = {\"row\":row};\n  // this.dialog.open(ViewLeaderComponent, dialogConfig).afterClosed().subscribe(dialogData=>{\n  // //this.getLeaders();\n  // });\n  // }\n\n\n}\n","<div class=\"current-route\">\n    <div>Roles and Permission</div>\n</div>\n\n<div class=\"row no-gutters\">\n    <div class=\"col-lg-6 col-md-12\">\n        <mat-card>\n            <mat-card-content>\n                <div class=\"obj-header\">\n                    <div class=\"heading\">\n                        <h2>Roles</h2>\n                    </div>\n                    <div>\n                        <button class=\"add\" mat-button (click)=\"onAdd()\">\n                            <mat-icon style=\"font-size: xx-large !important;\">add_circle</mat-icon>\n                        </button>\n                    </div>\n                </div>\n                <mat-table [dataSource]=\"rolesArray\" matSort #table>\n                    <ng-container matColumnDef=\"sn\">\n                        <mat-header-cell *matHeaderCellDef> SN </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element; let i = index;\"> {{i+1}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"role_title\">\n                        <mat-header-cell mat-sort-header *matHeaderCellDef> Role Title </mat-header-cell>\n                        <mat-cell *matCellDef=\"let element\"> {{element.role_title}} </mat-cell>\n                    </ng-container>\n                    <ng-container matColumnDef=\"action\">\n                        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\">\n                            <mat-icon [matMenuTriggerFor]=\"menu\" style=\"cursor: pointer;\">more_vert</mat-icon>\n                            <mat-menu #menu=\"matMenu\">\n                                <!-- <button mat-menu-item (click)=\"onView(row)\">\n                            <mat-icon>visibility</mat-icon>\n                            <span>View</span>\n                        </button>-->\n                        <button mat-menu-item (click)=\"onDelete(row)\">\n                            <mat-icon style=\"color: red !important;\">delete</mat-icon>\n                            <span>Delete</span>\n                        </button>\n                        <button mat-menu-item (click)=\"onUpdate(row)\">\n                            <mat-icon>update</mat-icon>\n                            <span>Update</span>\n                        </button> \n                            </mat-menu>\n                        </mat-cell>\n                    </ng-container>\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n                </mat-table>\n                <mat-paginator [length]=\"rolesArray.data.length\" [pageSizeOptions]=\"[5,10,15,20]\" [pageIndex]=\"0\"\n                    [pageSize]=\"10\" showFirstLastButtons></mat-paginator>\n\n            </mat-card-content>\n        </mat-card>\n    </div>\n    <div class=\"col-lg-6\">\n        <mat-card>\n            <mat-card-content>\n                <div class=\"heading\">\n                    <h2>Permission</h2>\n                </div>\n                <form [formGroup]=\"rolesForm\">\n                    <div class=\"form-row\">\n                        <div class=\"form-group col\">\n                            <label>Select Role</label>\n                            <select formControlName=\"selected_role\" (change)=\"onRoleChange($event.target.value)\"\n                                class=\"form-control form-control-sm\">\n                                <option value=\"\" [selected]=\"true\"></option>\n                                <option *ngFor=\"let role of roles\" value=\"{{role.id}}\">{{role.role_title}}</option>\n                            </select>\n                        </div>\n                    </div>\n                </form>\n                <div class=\"row\" style=\"background: whitesmoke;\">\n                    <div class=\"col\">\n                        <div cdkDropListGroup>\n                            <div class=\"row\">\n                                <div class=\"col-md-12 col-lg-6 permission-container\">\n                                    <h3>Current Permission</h3>\n\n                                    <div cdkDropList [cdkDropListData]=\"rolepermissions\" class=\"permission-list\"\n                                        (cdkDropListDropped)=\"drop($event)\">\n                                        <div class=\"permission-box\" *ngFor=\"let rolepermission of rolepermissions\"\n                                            cdkDrag>{{rolepermission.permission_code}}</div>\n                                        <div class=\"permission-box\" *ngIf=\"rolepermissions.length == 0\">No permission</div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col permission-container\">\n                                    <h3>Available Permission</h3>\n\n                                    <div cdkDropList [cdkDropListData]=\"allpermissions\" class=\"permission-list\"\n                                        (cdkDropListDropped)=\"drop($event)\">\n                                        <div class=\"permission-box\" *ngFor=\"let permission of allpermissions\" cdkDrag>\n                                            {{permission.permission_code}}</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style=\"padding: 10px;\">\n                            <button [disabled]=\"selected_role_id == null || selected_role_id == ''\" class=\"btn btn-success\" (click)=\"onsavePermission()\">Save</button>\n                        </div>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>"],"names":[],"sourceRoot":"webpack:///"}